{"version":3,"sources":["./ClientApp/app/components/projects/projects-edit/projects-edit.component.css","./ClientApp/app/components/projects/projects-edit/projects-edit.component.html","./ClientApp/app/components/projects/projects-edit/projects-edit.component.ts","./ClientApp/app/components/projects/projects-emploees-edit/projects-emploees-edit.component.css","./ClientApp/app/components/projects/projects-emploees-edit/projects-emploees-edit.component.html","./ClientApp/app/components/projects/projects-emploees-edit/projects-emploees-edit.component.ts","./ClientApp/app/components/projects/projects-emploees/projects-emploees.component.css","./ClientApp/app/components/projects/projects-emploees/projects-emploees.component.html","./ClientApp/app/components/projects/projects-emploees/projects-emploees.component.ts","./ClientApp/app/components/projects/projects-list-for-user/projects-list-for-user.component.css","./ClientApp/app/components/projects/projects-list-for-user/projects-list-for-user.component.html","./ClientApp/app/components/projects/projects-list-for-user/projects-list-for-user.component.ts","./ClientApp/app/components/projects/projects-list/projects-list.component.css","./ClientApp/app/components/projects/projects-list/projects-list.component.html","./ClientApp/app/components/projects/projects-list/projects-list.component.ts","./ClientApp/app/components/projects/projects-routing.module.ts","./ClientApp/app/components/projects/projects.module.ts","./ClientApp/app/components/work-activity/overtimes/overtimes-edit/overtimes-edit.component.html","./ClientApp/app/components/work-activity/overtimes/overtimes-edit/overtimes-edit.component.ts","./ClientApp/app/components/work-activity/overtimes/overtimes-list/overtimes-list.component.css","./ClientApp/app/components/work-activity/overtimes/overtimes-list/overtimes-list.component.html","./ClientApp/app/components/work-activity/overtimes/overtimes-list/overtimes-list.component.ts","./ClientApp/app/components/work-activity/overtimes/overtimes-user-list/overtimes-user-list.component.css","./ClientApp/app/components/work-activity/overtimes/overtimes-user-list/overtimes-user-list.component.html","./ClientApp/app/components/work-activity/overtimes/overtimes-user-list/overtimes-user-list.component.ts","./ClientApp/app/components/work-activity/sickdays/sickdays-edit/sickdays-edit.component.html","./ClientApp/app/components/work-activity/sickdays/sickdays-edit/sickdays-edit.component.ts","./ClientApp/app/components/work-activity/sickdays/sickdays-list/sickdays-list.component.css","./ClientApp/app/components/work-activity/sickdays/sickdays-list/sickdays-list.component.html","./ClientApp/app/components/work-activity/sickdays/sickdays-list/sickdays-list.component.ts","./ClientApp/app/components/work-activity/sickdays/sickdays-user-list/sickdays-user-list.component.css","./ClientApp/app/components/work-activity/sickdays/sickdays-user-list/sickdays-user-list.component.html","./ClientApp/app/components/work-activity/sickdays/sickdays-user-list/sickdays-user-list.component.ts","./ClientApp/app/components/work-activity/sizevacations/sizevacations-list.component.css","./ClientApp/app/components/work-activity/sizevacations/sizevacations-list.component.html","./ClientApp/app/components/work-activity/sizevacations/sizevacations-list.component.ts","./ClientApp/app/components/work-activity/vacations/vacations-edit/vacations-edit.component.html","./ClientApp/app/components/work-activity/vacations/vacations-edit/vacations-edit.component.ts","./ClientApp/app/components/work-activity/vacations/vacations-list/vacations-list.component.css","./ClientApp/app/components/work-activity/vacations/vacations-list/vacations-list.component.html","./ClientApp/app/components/work-activity/vacations/vacations-list/vacations-list.component.ts","./ClientApp/app/components/work-activity/vacations/vacations-user-list/vacations-user-list.component.css","./ClientApp/app/components/work-activity/vacations/vacations-user-list/vacations-user-list.component.html","./ClientApp/app/components/work-activity/vacations/vacations-user-list/vacations-user-list.component.ts","./ClientApp/app/components/work-activity/work-activity-routing.module.ts","./ClientApp/app/components/work-activity/work-activity.module.ts","./ClientApp/app/components/work-activity/work-at-home/work-at-home-list/work-at-home-list.component.css","./ClientApp/app/components/work-activity/work-at-home/work-at-home-list/work-at-home-list.component.html","./ClientApp/app/components/work-activity/work-at-home/work-at-home-list/work-at-home-list.component.ts","./ClientApp/app/components/work-activity/work-at-home/work-at-home-user-list/work-at-home-user-list.component.css","./ClientApp/app/components/work-activity/work-at-home/work-at-home-user-list/work-at-home-user-list.component.html","./ClientApp/app/components/work-activity/work-at-home/work-at-home-user-list/work-at-home-user-list.component.ts","./ClientApp/app/components/work-activity/workactivites/workactivities-list.component.css","./ClientApp/app/components/work-activity/workactivites/workactivities-list.component.html","./ClientApp/app/components/work-activity/workactivites/workactivities-list.component.ts","./ClientApp/app/models/overtime.model.ts","./ClientApp/app/models/query-models/overtime-query.model.ts","./ClientApp/app/models/query-models/sick-day-query.model.ts","./ClientApp/app/models/query-models/size-vacation-query.model.ts","./ClientApp/app/models/query-models/user-profile-project-query.model.ts","./ClientApp/app/models/query-models/user-query.model.ts","./ClientApp/app/models/query-models/vacation.query.model.ts","./ClientApp/app/models/query-models/work-activity-query.model.ts","./ClientApp/app/models/query-models/work-at-home-query.model.ts","./ClientApp/app/models/sick-day.model.ts","./ClientApp/app/models/size-vacation.model.ts","./ClientApp/app/models/user-profile-project.model.ts","./ClientApp/app/models/vacation.model.ts","./ClientApp/app/models/work-at-home.model.ts"],"names":[],"mappings":"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","file":"common.chunk.js","sourcesContent":["module.exports = \".cancel:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.cancel {\\r\\n    border-width: 1px;\\r\\n    border-color: black;\\r\\n    border-style: solid;\\r\\n    padding-left: 3px;\\r\\n    padding-right: 3px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-edit/projects-edit.component.css\n// module id = ./ClientApp/app/components/projects/projects-edit/projects-edit.component.css\n// module chunks = common","module.exports = \"<modal-wrapper [dialogRef]=\\\"dialogRef\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"card x_panel\\\" *ngIf=\\\"project && clients\\\">\\r\\n        <div id=\\\"divDataBody\\\" class=\\\"container entity\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12  form-title\\\">\\r\\n                            <h2 style=\\\"color: #73879C;\\\">Update info of {{ projectName}} </h2>\\r\\n                        </div>\\r\\n                <div class=\\\"col-md-12 col-lg-12\\\">\\r\\n                    <form name=\\\"addpost\\\" class=\\\"form-horizontal  container-fluid\\\">\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess2\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"project.Name\\\" name=\\\"Name\\\" autocomplete=\\\"off\\\">\\r\\n                            <span class=\\\"fa fa-bank form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                Name\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"data.clientId == null || data.clientId == undefined\\\">\\r\\n                            <div class=\\\"form-group col-md-11 col-xs-11  black-tooltip\\\">\\r\\n                                <select class=\\\"select2_single form-control\\\" [(ngModel)]=\\\"project.ClientId\\\" name=\\\"selectClient\\\" tabindex=\\\"-1\\\">\\r\\n                                    <option *ngFor=\\\"let selectClient of clients; let i = index\\\" [value]=\\\"selectClient.Id\\\">\\r\\n                                        {{ selectClient.OrganizationName }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                                <span class=\\\"tooltiptext\\\">\\r\\n                                    Client\\r\\n                                </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1 col-xs-1\\\" style=\\\"right: 8px;\\\">\\r\\n                                <button class=\\\"btn btn-primary black-tooltip\\\" (click)=\\\"createNewClient()\\\">\\r\\n                                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                                    <span class=\\\"tooltiptext\\\">Add new</span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                            <mat-datepicker #picker1></mat-datepicker>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess7\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Begin Date\\\" name=\\\"BeginDate\\\" [(ngModel)]=\\\"project.DateBegin\\\">\\r\\n                            <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker1\\\" style=\\\"color: #73879C;\\\"></mat-datepicker-toggle>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                Start Date\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                            <mat-datepicker #picker2></mat-datepicker>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess7\\\" [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" name=\\\"EndDate\\\" [(ngModel)]=\\\"project.DateEnd\\\">\\r\\n                            <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker2\\\" style=\\\"color: #73879C;\\\"></mat-datepicker-toggle>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                End Date\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess2\\\" placeholder=\\\"Comment\\\" [(ngModel)]=\\\"project.Comment\\\" name=\\\"Comment\\\" autocomplete=\\\"off\\\">\\r\\n                            <span class=\\\"fa fa-comment form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                Comment\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                            <div class=\\\"form-group col-md-6 col-xs-6 text-center\\\">\\r\\n                                <button class=\\\"btn btn-primary alignCenterBtn black-tooltip\\\" (click)=\\\"updateProject()\\\">\\r\\n                                    Save\\r\\n                                </button>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-6 col-xs-6 text-center\\\">\\r\\n                                <button class=\\\"btn btn-primary alignCenterBtn black-tooltip\\\" (click)=\\\"cancel()\\\">\\r\\n                                    Cancel\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</modal-wrapper>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-edit/projects-edit.component.html\n// module id = ./ClientApp/app/components/projects/projects-edit/projects-edit.component.html\n// module chunks = common","import { Component, OnInit, Inject, HostListener } from '@angular/core';\r\nimport { Project } from '../../../models/project.model';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { ClientsService } from '../../../services/clients.service';\r\nimport { UserStorageService } from '../../../services/user-storage.service';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { Client } from '../../../models/client.model';\r\nimport { User } from '../../../models/user.model';\r\nimport { UserProfileProject } from '../../../models/user-profile-project.model';\r\nimport { ClientQueryModel } from '../../../models/query-models/client-query.model';\r\nimport { UserQueryModel } from '../../../models/query-models/user-query.model';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { ProjectsEmploeesComponent } from '../projects-emploees/projects-emploees.component';\r\n\r\n@Component({\r\n    selector: 'projects-edit',\r\n    templateUrl: './projects-edit.component.html',\r\n    styleUrls: ['./projects-edit.component.css']\r\n})\r\nexport class ProjectsEditComponent implements OnInit {\r\n\r\n    project: Project;\r\n\r\n    private id: number;\r\n\r\n    clients: Array<Client> = new Array<Client>();\r\n\r\n    users: Array<User> = new Array<User>();\r\n\r\n    selectedUsers: Array<UserProfileProject> = new Array<UserProfileProject>();\r\n\r\n    isSelected: Array<boolean>;\r\n\r\n    minDateBeginDate: Date;\r\n\r\n    projectName: string;\r\n\r\n    constructor(private projectService: ProjectsService,\r\n        private clientsService: ClientsService,\r\n        private userStorageService: UserStorageService,\r\n        private usersService: UsersService,\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        public dialogRef: MatDialogRef<ProjectsEditComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    @HostListener('window:keyup', ['$event'])\r\n    keyEvent(event: KeyboardEvent) {\r\n      \r\n      if (event.keyCode === 13) {\r\n          this.updateProject();\r\n      }\r\n  \r\n      if (event.keyCode === 27) {\r\n          this.cancel();\r\n      }\r\n    }    \r\n\r\n    ngOnInit() { \r\n        this.id = this.data.projectId;\r\n        this.projectName = this.data.projectName;\r\n            this.projectService.getById(this.id).subscribe(response => {\r\n                this.project = response;\r\n                if (this.project.DateBegin) {\r\n                    this.project.DateBegin = new Date(Date.parse(this.project.DateBegin.toString()));\r\n                    this.project.DateBegin = (this.project.DateBegin.getUTCFullYear() > 2010) ? this.project.DateBegin : null;\r\n                }\r\n                if (this.project.DateEnd) {\r\n                    this.project.DateEnd = new Date(Date.parse(this.project.DateEnd.toString()));\r\n                    this.project.DateEnd = (this.project.DateEnd.getUTCFullYear() > 2010) ? this.project.DateEnd : null;\r\n                }\r\n                this.selectedUsers = this.project.Emploees;\r\n                let queryModelClients = new ClientQueryModel();\r\n            this.clientsService.get(queryModelClients).subscribe(resp =>{\r\n                this.clients = resp.Result;\r\n            })\r\n            });\r\n        this.minDateBeginDate = new Date();\r\n        this.minDateBeginDate.setUTCFullYear(2018);\r\n    }\r\n\r\n    public updateProject() {\r\n        if (this.project.DateBegin != undefined) {\r\n            this.project.DateBegin = new Date(Date.parse(this.project.DateBegin.toString()));\r\n            this.project.DateBegin.setMinutes(this.project.DateBegin.getMinutes() - this.project.DateBegin.getTimezoneOffset());\r\n        }\r\n        if (this.project.DateEnd != undefined) {\r\n            this.project.DateEnd = new Date(Date.parse(this.project.DateEnd.toString()));\r\n            this.project.DateEnd.setMinutes(this.project.DateEnd.getMinutes() - this.project.DateEnd.getTimezoneOffset());\r\n        }\r\n        this.projectService.update(this.project).subscribe(response => {\r\n            if (this.dialogRef != null && this.dialogRef != undefined) this.dialogRef.close();\r\n        })\r\n    }\r\n\r\n    public cancel() {\r\n        if (this.dialogRef != null && this.dialogRef != undefined) this.dialogRef.close();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/projects/projects-edit/projects-edit.component.ts","module.exports = \".cancel:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.cancel {\\r\\n    border-width: 1px;\\r\\n    border-color: black;\\r\\n    border-style: solid;\\r\\n    padding-left: 3px;\\r\\n    padding-right: 3px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-emploees-edit/projects-emploees-edit.component.css\n// module id = ./ClientApp/app/components/projects/projects-emploees-edit/projects-emploees-edit.component.css\n// module chunks = common","module.exports = \"<modal-wrapper [dialogRef]=\\\"dialogRef\\\">\\r\\n\\r\\n    <div class=\\\"card x_panel\\\" *ngIf=\\\"emploee\\\">\\r\\n        <div id=\\\"divDataBody\\\" class=\\\"container entity\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12 form-title\\\">\\r\\n                            <h2 style=\\\"color: #73879C;\\\">Update Employee`s info</h2>\\r\\n                        </div>\\r\\n                <div class=\\\"col-md-12 col-lg-12\\\">\\r\\n                    <form name=\\\"addpost\\\" class=\\\"form-horizontal  container-fluid\\\">\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess2\\\" placeholder=\\\"FirstName\\\" [(ngModel)]=\\\"emploee.FirstName\\\" name=\\\"FirstName\\\" readonly>\\r\\n                            <span class=\\\"fa fa-user form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                FirstName\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess2\\\" placeholder=\\\"LastName\\\" [(ngModel)]=\\\"emploee.LastName\\\" name=\\\"LastName\\\" readonly>\\r\\n                            <span class=\\\"fa fa-user form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                LastName\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                            <select class=\\\"select2_single form-control\\\" [(ngModel)]=\\\"emploee.Position\\\" name=\\\"Position\\\" tabindex=\\\"-1\\\">\\r\\n                                <option *ngFor=\\\"let position of positions; let i = index\\\" [value]=\\\"position\\\">\\r\\n                                    {{position }}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                Position\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                            <select class=\\\"select2_single form-control\\\" [(ngModel)]=\\\"emploee.Status\\\" name=\\\"Status\\\" tabindex=\\\"-1\\\">\\r\\n                                <option *ngFor=\\\"let status of statuses; let i = index\\\" [value]=\\\"status\\\">\\r\\n                                    {{status }}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                Status\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                            <mat-datepicker #picker1></mat-datepicker>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess7\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Date of start of work\\\" [min]=\\\"minDateStart\\\" name=\\\"DateStartWork\\\" [(ngModel)]=\\\"emploee.DateStartWork\\\">\\r\\n                            <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker1\\\" style=\\\"color: #73879C;\\\"></mat-datepicker-toggle>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                Start Work\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                            <mat-datepicker #picker2></mat-datepicker>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess7\\\" [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Date of finish of work\\\" [min]=\\\"minDateStart\\\" name=\\\"DateFinishWork\\\" [(ngModel)]=\\\"emploee.DateFinishWork\\\">\\r\\n                            <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker2\\\" style=\\\"color: #73879C;\\\"></mat-datepicker-toggle>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                End Work\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess2\\\" placeholder=\\\"Comment\\\" [(ngModel)]=\\\"emploee.Comment\\\" name=\\\"Comment\\\" autocomplete=\\\"off\\\">\\r\\n                            <span class=\\\"fa fa-bank form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                            <span class=\\\"tooltiptext\\\">\\r\\n                                Comment\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                            <div class=\\\"form-group col-md-6 col-xs-6 text-center\\\">\\r\\n                                <button class=\\\"btn btn-primary alignCenterBtn black-tooltip\\\" (click)=\\\"updateEmploee(emploee)\\\">\\r\\n                                    Save\\r\\n                                </button>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-6 col-xs-6 text-center\\\">\\r\\n                                <button class=\\\"btn btn-primary alignCenterBtn black-tooltip\\\" (click)=\\\"cancel()\\\">\\r\\n                                    Cancel\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</modal-wrapper>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-emploees-edit/projects-emploees-edit.component.html\n// module id = ./ClientApp/app/components/projects/projects-emploees-edit/projects-emploees-edit.component.html\n// module chunks = common","import { Component, OnInit, Optional, Inject } from '@angular/core';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { UserProfileProject } from '../../../models/user-profile-project.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { UserProfileProjectService } from '../../../services/user-profile-project.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'projects-emploees-edit',\r\n    templateUrl: './projects-emploees-edit.component.html',\r\n    styleUrls: ['./projects-emploees-edit.component.css']\r\n})\r\nexport class ProjectsEmploeesEditComponent implements OnInit {\r\n\r\n    private id: number;\r\n\r\n    emploee: UserProfileProject;\r\n\r\n    minDateStart: Date;\r\n\r\n    positions = ['developer', 'project manager', 'quality assurance', 'business analyst', 'team lead', 'designer'];\r\n\r\n    statuses = ['Working', 'Complete'];\r\n\r\n    constructor(private userProfileProjectService: UserProfileProjectService,\r\n        private route: ActivatedRoute,\r\n        @Optional() public dialogRef: MatDialogRef<ProjectsEmploeesEditComponent>,\r\n        @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private location: Location) { }\r\n\r\n    ngOnInit(): void {\r\n            this.id = this.data.emploeeId;\r\n            this.userProfileProjectService.getById(this.id).subscribe(response => {\r\n                this.emploee = response;\r\n                if (this.emploee.DateStartWork) {\r\n                    this.emploee.DateStartWork = new Date(Date.parse(this.emploee.DateStartWork.toString()));\r\n                    this.emploee.DateStartWork = (this.emploee.DateStartWork.getUTCFullYear() > 2010) ? this.emploee.DateStartWork : null;\r\n                }\r\n                if (this.emploee.DateFinishWork) {\r\n                    this.emploee.DateFinishWork = new Date(Date.parse(this.emploee.DateFinishWork.toString()));\r\n                    this.emploee.DateFinishWork = (this.emploee.DateFinishWork.getUTCFullYear() > 2010) ? this.emploee.DateFinishWork : null;\r\n                }\r\n            });\r\n        this.minDateStart = new Date();\r\n        this.minDateStart.setUTCFullYear(2018);\r\n     }\r\n\r\n     updateEmploee(emploee: UserProfileProject) {\r\n         if (emploee.DateStartWork) {\r\n             emploee.DateStartWork = new Date(Date.parse(emploee.DateStartWork.toString()));\r\n             emploee.DateStartWork.setMinutes(emploee.DateStartWork.getMinutes() - emploee.DateStartWork.getTimezoneOffset());\r\n         }\r\n         if (emploee.DateFinishWork) {\r\n             emploee.DateFinishWork = new Date(Date.parse(emploee.DateFinishWork.toString()));\r\n             emploee.DateFinishWork.setMinutes(emploee.DateFinishWork.getMinutes() - emploee.DateFinishWork.getTimezoneOffset());\r\n         }\r\n        emploee.ProjectId = this.id;\r\n        this.userProfileProjectService.update(emploee).subscribe(response => {\r\n            if (this.dialogRef != null && this.dialogRef != undefined) this.dialogRef.close();\r\n        });\r\n     }\r\n\r\n     cancel() {\r\n        if (this.dialogRef != null && this.dialogRef != undefined) this.dialogRef.close();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/projects/projects-emploees-edit/projects-emploees-edit.component.ts","module.exports = \".cancel:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.cancel {\\r\\n    border-width: 1px;\\r\\n    border-color: black;\\r\\n    border-style: solid;\\r\\n    padding-left: 3px;\\r\\n    padding-right: 3px;\\r\\n}\\r\\n\\r\\n.my-table-striped > tbody > tr:nth-of-type(odd) {\\r\\n    background-color: #f9f9f9 !important;\\r\\n  }\\r\\n\\r\\n.btn-toggle {\\r\\n    position: absolute !important;\\r\\n    right: 15px !important;\\r\\n  }\\r\\n\\r\\n.scroll-in-modal {\\r\\n    height: 500px; overflow-y: auto; overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n.dropdown-menu.pull-right {\\r\\n    right: 20px !important;\\r\\n    top: 40px !important;\\r\\n}\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-emploees/projects-emploees.component.css\n// module id = ./ClientApp/app/components/projects/projects-emploees/projects-emploees.component.css\n// module chunks = common","module.exports = \"<modal-wrapper [dialogRef]=\\\"dialogRef\\\">\\r\\n\\r\\n    <div  [className]=\\\"getClassForTable()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h2 style=\\\"color: #73879C;\\\">{{name}}</h2>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <a href=\\\"javascript:;\\\" class=\\\"user-profile dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" *permission=\\\"['Super_Admin', 'Admin', 'ProjectManager']\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-toggle\\\">\\r\\n                        <span class=\\\"fa fa-plus\\\"></span>\\r\\n                    </button>\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu dropdown-usermenu pull-right\\\">\\r\\n                    <li>\\r\\n                        <a (click)=\\\"menuAddNew()\\\" class=\\\"side-menu-link\\\">\\r\\n                            Add Employee to the project\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <h3>\\r\\n                    Employees:\\r\\n                </h3>\\r\\n                <form [formGroup]=\\\"newEmploeeForm\\\" (submit)=\\\"add(newEmploee)\\\">\\r\\n                    <div id=\\\"datatable-responsive_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap no-footer\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <table class=\\\"table my-table-striped table-bordered projects\\\" [formGroup]=\\\"newEmploeeForm\\\" (submit)=\\\"add(newEmploee)\\\" *ngIf=\\\"emploees != null && emploees != undefined\\\">\\r\\n                                    <thead style=\\\"color: #73879C;\\\">\\r\\n                                        <tr>\\r\\n                                            <th>First & Last Name</th>\\r\\n                                            <th>Position</th>\\r\\n                                            <th>Date of start of work</th>\\r\\n                                            <th>Date of finish of work</th>\\r\\n                                            <th style=\\\"width:15%\\\">Comment</th>\\r\\n                                            <th>Status</th>\\r\\n                                            <th *permission=\\\"['Super_Admin', 'Admin', 'ProjectManager']\\\" style=\\\"width: 18%\\\"></th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr *ngIf=\\\"isAddVisible\\\">\\r\\n                                            <td>\\r\\n                                                <select class=\\\"select2_single form-control\\\" [(ngModel)]=\\\"newEmploee.UserProfileId\\\" formControlName=\\\"UserProfile\\\" tabindex=\\\"-1\\\">\\r\\n                                                    <option *ngFor=\\\"let selectedUser of users; let i = index\\\" [value]=\\\"selectedUser.UserProfileId\\\">\\r\\n                                                        {{ selectedUser.FirstName }} {{ selectedUser.LastName }}\\r\\n                                                    </option>\\r\\n                                                </select>\\r\\n                                                <div class=\\\"error-message\\\" *ngIf=\\\"newEmploeeForm.get('UserProfile').errors\\\">\\r\\n                                                    <span *ngIf=\\\"newEmploeeForm.get('UserProfile').errors.required && submitAttempt\\\">User is required</span>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <select class=\\\"select2_single form-control\\\" [(ngModel)]=\\\"newEmploee.Position\\\" formControlName=\\\"Position\\\" tabindex=\\\"-1\\\">\\r\\n                                                    <option *ngFor=\\\"let position of positions; let i = index\\\" [value]=\\\"position\\\">\\r\\n                                                        {{ position }}\\r\\n                                                    </option>\\r\\n                                                </select>\\r\\n                                                <div class=\\\"error-message\\\" *ngIf=\\\"newEmploeeForm.get('Position').errors\\\">\\r\\n                                                    <span *ngIf=\\\"newEmploeeForm.get('Position').errors.required && submitAttempt\\\">Position is required</span>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n\\r\\n\\r\\n                                                <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                                                    <mat-datepicker #picker1></mat-datepicker>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess7\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start of work\\\" formControlName=\\\"DateStartWork\\\" [(ngModel)]=\\\"newEmploee.DateStartWork\\\">\\r\\n                                                    <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker1\\\" style=\\\"color: #73879C;\\\"></mat-datepicker-toggle>\\r\\n                                                    <span class=\\\"tooltiptext\\\">\\r\\n                                                        Start of work\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n\\r\\n                                                <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                                                    <mat-datepicker #picker2></mat-datepicker>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess7\\\" [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End of work\\\" formControlName=\\\"DateFinishWork\\\" [(ngModel)]=\\\"newEmploee.DateFinishWork\\\">\\r\\n                                                    <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker2\\\" style=\\\"color: #73879C;\\\"></mat-datepicker-toggle>\\r\\n                                                    <span class=\\\"tooltiptext\\\">\\r\\n                                                        End of work\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width:15%\\\">\\r\\n                                                <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control form-control-small has-feedback-left\\\" id=\\\"inputSuccess2\\\" placeholder=\\\"Comment\\\" [(ngModel)]=\\\"newEmploee.Comment\\\" formControlName=\\\"Comment\\\" autocomplete=\\\"off\\\">\\r\\n                                                    <span class=\\\"fa fa-bank form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                                    <span class=\\\"tooltiptext\\\">\\r\\n                                                        Comment\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td></td>\\r\\n                                            <td style=\\\"text-align:right; width: 18%\\\">\\r\\n                                                <button type=\\\"submit\\\" class=\\\"btn btn-primary black-tooltip\\\">\\r\\n                                                    <i class=\\\"fa fa-check\\\"></i>\\r\\n                                                    <span class=\\\"tooltiptext\\\">Save</span>\\r\\n                                                </button>\\r\\n                                                <button class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"isAddVisible = false\\\">\\r\\n                                                    <i class=\\\"fa fa-close\\\"></i>\\r\\n                                                    <span class=\\\"tooltiptext\\\">Cancel</span>\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        <ngx-spinner [visible]=\\\"loading\\\" [config]=\\\"spinnerConfig\\\"></ngx-spinner>\\r\\n                                        <tr *ngFor=\\\"let emploee of emploees; let i = index\\\">\\r\\n                                            <td><span>{{emploee.FirstName}}{{emploee.LastName }}</span></td>\\r\\n                                            <td><span>{{emploee.Position }}</span></td>\\r\\n                                            <td><span>{{emploee.DateStartWork| date:'MM/dd/yyyy'}}</span></td>\\r\\n                                            <td><span>{{emploee.DateFinishWork| date:'MM/dd/yyyy'}}</span></td>\\r\\n                                            <td style=\\\"width:15%\\\"><span>{{emploee.Comment}}</span></td>\\r\\n                                            <td><span>{{emploee.Status}}</span></td>\\r\\n                                            <td *permission=\\\"['Super_Admin', 'Admin', 'ProjectManager']\\\" style=\\\"text-align:right; width: 18%\\\">\\r\\n                                                <button class=\\\"btn btn-primary black-tooltip\\\" (click)=\\\"goToUser(emploee)\\\">\\r\\n                                                    <i class=\\\"fa fa-male\\\"></i>\\r\\n                                                    <span class=\\\"tooltiptext\\\">Go to user</span>\\r\\n                                                </button>\\r\\n                                                <button class=\\\"btn btn-primary black-tooltip\\\" (click)=\\\"editProjectDialog(emploee)\\\">\\r\\n                                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                                    <span class=\\\"tooltiptext\\\">Edit</span>\\r\\n                                                </button>\\r\\n                                                <button class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"delete(emploee)\\\">\\r\\n                                                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                                    <span class=\\\"tooltiptext\\\">Delete</span>\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                                <table-buttons [subject]=\\\"subject\\\">\\r\\n\\r\\n                                </table-buttons>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</modal-wrapper>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-emploees/projects-emploees.component.html\n// module id = ./ClientApp/app/components/projects/projects-emploees/projects-emploees.component.html\n// module chunks = common","import { Component, OnInit, Inject, Input, Optional } from '@angular/core';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Project } from '../../../models/project.model';\r\nimport { Client } from '../../../models/client.model';\r\nimport { User } from '../../../models/user.model';\r\nimport { SPINNER_ANIMATIONS, SPINNER_PLACEMENT, ISpinnerConfig } from '@hardpool/ngx-spinner';\r\nimport { UserQueryModel } from '../../../models/query-models/user-query.model';\r\nimport { UserStorageService } from '../../../services/user-storage.service';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { UserProfileProject } from '../../../models/user-profile-project.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserProfileProjectService } from '../../../services/user-profile-project.service';\r\nimport { UserProfileProjectQueryModel } from '../../../models/query-models/user-profile-project-query.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { ProjectsEmploeesEditComponent } from '../projects-emploees-edit/projects-emploees-edit.component';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { DeleteConfirmationComponent } from '../../modals/delete-confirmation/delete-confirmation.component';\r\n\r\n@Component({\r\n    selector: 'projects-emploees',\r\n    templateUrl: './projects-emploees.component.html',\r\n    styleUrls: ['./projects-emploees.component.css']\r\n})\r\nexport class ProjectsEmploeesComponent implements OnInit {\r\n\r\n    project: Project;\r\n\r\n    private id: number;\r\n\r\n    clients: Array<Client> = new Array<Client>();\r\n\r\n    users: Array<User> = new Array<User>();\r\n\r\n    emploees: Array<UserProfileProject> = new Array<UserProfileProject>();\r\n\r\n    newEmploee: UserProfileProject;\r\n\r\n    loading = false;\r\n\r\n    editText: string = 'Edit'\r\n\r\n    editId: number = -1;\r\n\r\n    status: string;\r\n\r\n    newEmploeeForm: FormGroup;\r\n\r\n    updateEmploee: FormGroup;\r\n\r\n    isAddVisible: boolean;\r\n\r\n    submitAttempt: boolean;\r\n\r\n    positions = ['developer', 'project manager', 'quality assurance', 'business analyst', 'team lead', 'designer'];\r\n\r\n    name: string\r\n\r\n    userId: number;\r\n\r\n    queryModel: UserProfileProjectQueryModel;\r\n\r\n    subject: Subject<any>;\r\n\r\n    subscription: Subscription;\r\n\r\n\r\n\r\n    spinnerConfig: ISpinnerConfig = {\r\n        placement: SPINNER_PLACEMENT.block_ui,\r\n        animation: SPINNER_ANIMATIONS.spin_3,\r\n        size: \"3rem\",\r\n        color: \"#1574b3\"\r\n    };\r\n\r\n    @Input('projectId') projectId: number;\r\n    @Input('projectName') projectName: string;\r\n    @Input('isNotModal') isNotModal: boolean;\r\n\r\n    constructor(private projectService: ProjectsService,\r\n        private userProfileProjectService: UserProfileProjectService,\r\n        private route: ActivatedRoute,\r\n        private userStorageService: UserStorageService,\r\n        private usersService: UsersService,\r\n        private fBuilder: FormBuilder,\r\n        private router: Router,\r\n        @Optional() public dialogRef: MatDialogRef<ProjectsEmploeesEditComponent>,\r\n        @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private dialog: MatDialog) { }\r\n\r\n    ngOnInit() {\r\n        this.subject = new Subject<any>();\r\n        this.queryModel = new UserProfileProjectQueryModel();\r\n        if (this.projectId != null && this.projectId != undefined) \r\n        this.id = this.projectId;\r\n        if (this.projectName != null && this.projectName != undefined) \r\n        this.name = this.projectName;\r\n        if (this.data != null && this.data != undefined){\r\n            if (this.data.projectId != null && this.data.projectId != undefined) \r\n            this.id = this.data.projectId;\r\n            if (this.data.projectName != null && this.data.projectName != undefined) \r\n            this.name = this.data.projectName;\r\n            if (this.data.userId != null && this.data.userId != undefined)\r\n            this.userId = this.data.userId;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.isAddVisible = false;\r\n        this.editId = -1;\r\n        this.queryModel.Take =  10;\r\n            this.queryModel.ProjectId = this.id;\r\n            this.userProfileProjectService.get(this.queryModel).subscribe(response => {\r\n                this.emploees = response.Result;\r\n                this.loading = false;\r\n                this.subject.next({from: \"component\", response: response});\r\n                let queryModelUsers = new UserQueryModel();\r\n                this.usersService.get(queryModelUsers).subscribe(res => {\r\n                    this.users = res.Result;\r\n                })\r\n                this.emploees.forEach(element => {\r\n                    if (element.DateStartWork != null) {\r\n                        element.DateStartWork = new Date(Date.parse(element.DateStartWork.toString()));\r\n                        element.DateStartWork = (element.DateStartWork.getUTCFullYear() > 2010) ? element.DateStartWork : null;\r\n                    }\r\n                    if (element.DateFinishWork) {\r\n                        element.DateFinishWork = new Date(Date.parse(element.DateFinishWork.toString()));\r\n                        element.DateFinishWork = (element.DateFinishWork.getUTCFullYear() > 2010) ? element.DateFinishWork : null;\r\n                    }\r\n                });\r\n            });\r\n\r\n            this.subscription = this.subject.asObservable().subscribe(response => {\r\n                if (response.from == \"tablebuttons\") {\r\n                    this.queryModel = response.response as UserProfileProjectQueryModel;\r\n                    if (this.projectId != null && this.projectId != undefined) \r\n                        this.id = this.projectId;\r\n                    if (this.projectName != null && this.projectName != undefined) \r\n                    this.name = this.projectName;\r\n                    if (this.data != null && this.data != undefined) {\r\n                    if (this.data.projectId != null && this.data.projectId != undefined) \r\n                    this.id = this.data.projectId;\r\n                    if (this.data.projectName != null && this.data.projectName != undefined) \r\n                    this.name = this.data.projectName;\r\n                    if (this.data.userId != null && this.data.userId != undefined)\r\n                    this.userId = this.data.userId;\r\n                    }\r\n                    this.loading = true;\r\n                    this.isAddVisible = false;\r\n                    this.editId = -1;\r\n                    this.queryModel.ProjectId = this.id;\r\n                        this.userProfileProjectService.get(this.queryModel).subscribe(response => {\r\n                            this.emploees = response.Result;\r\n                            this.loading = false;\r\n                            let queryModelUsers = new UserQueryModel();\r\n                            this.usersService.get(queryModelUsers).subscribe(res => {\r\n                                this.users = res.Result;\r\n            \r\n                            })\r\n                            this.emploees.forEach(element => {\r\n                                if (element.DateStartWork != null) {\r\n                                    element.DateStartWork = new Date(Date.parse(element.DateStartWork.toString()));\r\n                                    element.DateStartWork = (element.DateStartWork.getUTCFullYear() > 2010) ? element.DateStartWork : null;\r\n                                }\r\n                                if (element.DateFinishWork) {\r\n                                    element.DateFinishWork = new Date(Date.parse(element.DateFinishWork.toString()));\r\n                                    element.DateFinishWork = (element.DateFinishWork.getUTCFullYear() > 2010) ? element.DateFinishWork : null;\r\n                                }\r\n                            });\r\n                        });\r\n                }\r\n            });\r\n        this.initForm();\r\n     }\r\n\r\n     initForm() {\r\n        this.newEmploeeForm = this.fBuilder.group({\r\n            Position:['', [\r\n                Validators.required\r\n            ]],\r\n            UserProfile: ['', [\r\n                Validators.required\r\n            ]],\r\n            DateStartWork: [],\r\n            DateFinishWork:[],\r\n            Comment: []\r\n        });\r\n    }\r\n\r\n    add(newEmploee: UserProfileProject) {\r\n        if (this.newEmploeeForm.valid && this.isAddVisible == true) {\r\n            if (newEmploee.DateStartWork != undefined && newEmploee.DateStartWork != null) {\r\n                newEmploee.DateStartWork = new Date(Date.parse(newEmploee.DateStartWork.toString()));\r\n                newEmploee.DateStartWork.setMinutes(newEmploee.DateStartWork.getMinutes() - newEmploee.DateStartWork.getTimezoneOffset());\r\n            }\r\n            if (newEmploee.DateFinishWork != undefined && newEmploee.DateFinishWork != null) {\r\n                newEmploee.DateFinishWork = new Date(Date.parse(newEmploee.DateFinishWork.toString()));\r\n                newEmploee.DateFinishWork.setMinutes(newEmploee.DateFinishWork.getMinutes() - newEmploee.DateFinishWork.getTimezoneOffset());\r\n            }\r\n            this.submitAttempt = false;\r\n            newEmploee.ProjectId = this.id;\r\n            this.loading = true;\r\n            this.userProfileProjectService.create(newEmploee).subscribe(response => {\r\n                let queryModel = new UserProfileProjectQueryModel();\r\n                queryModel.ProjectId = this.id;\r\n                this.userProfileProjectService.get(queryModel).subscribe(response => {\r\n                this.emploees = response.Result;\r\n                this.loading = false;\r\n                this.isAddVisible = false;\r\n                });\r\n            })\r\n        }\r\n        else {\r\n            this.submitAttempt = true;\r\n        }\r\n     }\r\n\r\n     public confirmDeleteDialog(emploee: UserProfileProject, index) {\r\n\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.position = { top: '0' };\r\n        dialogConfig.autoFocus = false;\r\n\r\n        this.dialog.open(DeleteConfirmationComponent, dialogConfig)\r\n            .afterClosed().subscribe(dialogResult => {\r\n                if (dialogResult)\r\n                    this.delete(emploee, index);\r\n            });\r\n    }\r\n\r\n\r\n    public delete(emploee: UserProfileProject, indexOnArray: number) {\r\n        this.loading = true;\r\n        this.userProfileProjectService.delete(emploee.Id).subscribe((result) => {\r\n            let queryModel = new UserProfileProjectQueryModel();\r\n                queryModel.ProjectId = this.id;\r\n                this.userProfileProjectService.get(queryModel).subscribe(response => {\r\n                this.emploees = response.Result;\r\n                this.isAddVisible = false;\r\n                this.loading = false;\r\n                });\r\n            this.status = \"Deleted\";\r\n        })\r\n     }\r\n\r\n     public menuAddNew() {\r\n        this.isAddVisible = true;\r\n        this.newEmploee = new UserProfileProject();\r\n    }\r\n\r\n    public editProjectDialog(emploee: UserProfileProject) {\r\n        const dialogRef = this.dialog.open(ProjectsEmploeesEditComponent, {\r\n            width: '1050px',\r\n            data: {emploeeId: emploee.Id}\r\n          });\r\n\r\n          this.loading = true;\r\n          this.isAddVisible = false;\r\n          this.editId = -1;\r\n              let queryModel = new UserProfileProjectQueryModel();\r\n              queryModel.ProjectId = this.id;\r\n              this.userProfileProjectService.get(queryModel).subscribe(response => {\r\n                  this.emploees = response.Result;\r\n                  let queryModelUsers = new UserQueryModel();\r\n                  this.usersService.get(queryModelUsers).subscribe(res => {\r\n                      this.users = res.Result;\r\n                      this.loading = false;\r\n                  })\r\n              });\r\n          this.initForm();\r\n    }\r\n\r\n    public cancel() {\r\n        if (this.dialogRef != null && this.dialogRef != undefined) this.dialogRef.close();\r\n    }\r\n\r\n    public goToUser(emploee: UserProfileProject) {\r\n        if (this.dialogRef != null) this.dialogRef.close();\r\n        this.router.navigateByUrl('/users/'+emploee.UserProfileId+'/info');\r\n    }\r\n\r\n    public getClassForTable() {\r\n        if (this.data != undefined && this.data != null) {\r\n            return \"card x_panel scroll-in-modal\";\r\n        }\r\n        else return \"card x_panel\";\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/projects/projects-emploees/projects-emploees.component.ts","module.exports = \".my-table-striped > tbody > tr:nth-of-type(odd) {\\r\\n  background-color: #f9f9f9 !important;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-list-for-user/projects-list-for-user.component.css\n// module id = ./ClientApp/app/components/projects/projects-list-for-user/projects-list-for-user.component.css\n// module chunks = common","module.exports = \"<div class=\\\"card x_panel\\\" style=\\\"margin-top: 20px !important;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h2>Projects</h2>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 text-right\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div id=\\\"datatable-responsive_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap no-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"table my-table-striped table-bordered projects\\\">\\r\\n                    <thead class=\\\"text-primary\\\">\\r\\n                        <tr>\\r\\n                            <th>Project</th>\\r\\n                            <th>Role in the project</th>\\r\\n                            <th>Work time in the project(days)</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <ngx-spinner [visible]=\\\"loading\\\" [config]=\\\"spinnerConfig\\\"></ngx-spinner>\\r\\n                        <tr *ngFor=\\\"let emploee of emploees; let i = index\\\">\\r\\n                            <td><span>{{emploee.ProjectName}}</span></td>\\r\\n                            <td><span>{{emploee.Position}}</span></td>\\r\\n                            <td><span>{{getTime(emploee)}}</span></td>\\r\\n                            <td style=\\\"text-align:right\\\">\\r\\n                                <button class=\\\"btn btn-primary btn-go-to-user black-tooltip\\\" (click)=\\\"showEmploeesDialog(emploee)\\\">\\r\\n                                    <i class=\\\"fa fa-users\\\"></i>\\r\\n                                    <span class=\\\"tooltiptext\\\">All employees</span>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <table-buttons [subject]=\\\"subject\\\">\\r\\n                </table-buttons>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-list-for-user/projects-list-for-user.component.html\n// module id = ./ClientApp/app/components/projects/projects-list-for-user/projects-list-for-user.component.html\n// module chunks = common","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { SPINNER_ANIMATIONS, SPINNER_PLACEMENT, ISpinnerConfig } from '@hardpool/ngx-spinner';\r\nimport { UserStorageService } from '../../../services/user-storage.service';\r\nimport { Project } from '../../../models/project.model';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { ProjectQueryModel } from '../../../models/query-models/project-query.model';\r\nimport { Client } from '../../../models/client.model';\r\nimport { UserProfileProjectQueryModel } from '../../../models/query-models/user-profile-project-query.model';\r\nimport { UserProfileProjectService } from '../../../services/user-profile-project.service';\r\nimport { UserProfileProject } from '../../../models/user-profile-project.model';\r\nimport { Location } from '@angular/common';\r\nimport { ProjectsEmploeesComponent } from '../projects-emploees/projects-emploees.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'projects-list-for-user',\r\n    templateUrl: './projects-list-for-user.component.html',\r\n    styleUrls: ['./projects-list-for-user.component.css']\r\n})\r\nexport class ProjectsListForUserComponent implements OnInit {\r\n\r\n    emploees: Array<UserProfileProject> = new Array<UserProfileProject>();\r\n\r\n    clients: Array<Client> = new Array<Client>();\r\n\r\n    isSelected: Array<boolean>;\r\n\r\n    submitAttempt: boolean;\r\n\r\n    loading = false;\r\n    \r\n    isAddVisible: boolean;\r\n\r\n    status: string;\r\n\r\n    id: number;\r\n\r\n    queryModel: UserProfileProjectQueryModel;\r\n\r\n    subject: Subject<any>;\r\n\r\n    subscription: Subscription;\r\n\r\n    spinnerConfig: ISpinnerConfig = {\r\n        placement: SPINNER_PLACEMENT.block_ui,\r\n        animation: SPINNER_ANIMATIONS.spin_3,\r\n        size: \"3rem\",\r\n        color: \"#1574b3\"\r\n    };\r\n\r\n    constructor(private projectService: ProjectsService,\r\n        private userStorageService: UserStorageService,\r\n        private fBuilder: FormBuilder,\r\n        private dialog: MatDialog,\r\n        private userProfileProjectService: UserProfileProjectService,\r\n        private location: Location) { }\r\n\r\n    @Input('userId') userId: number;\r\n\r\n    ngOnInit() { \r\n        this.subject = new Subject<any>();\r\n        this.isAddVisible = false;\r\n        this.queryModel = new UserProfileProjectQueryModel();\r\n        if (this.userId != null)\r\n            this.id = this.userId;\r\n        this.loading = true;\r\n              this.queryModel.UserProfileId = this.id;\r\n              this.queryModel.Take =  10;\r\n              this.userProfileProjectService.get(this.queryModel).subscribe(response => {\r\n                  this.emploees = response.Result;\r\n                  this.subject.next({from: \"component\", response: response});\r\n                  this.loading = false;\r\n        })\r\n\r\n        this.subscription = this.subject.asObservable().subscribe(response => {\r\n            if (response.from == \"tablebuttons\"){\r\n                this.queryModel = response.response as UserProfileProjectQueryModel;\r\n                if (this.userId != null)\r\n                this.id = this.userId;\r\n                this.loading = true;\r\n                  this.queryModel.UserProfileId = this.id;\r\n                  this.userProfileProjectService.get(this.queryModel).subscribe(response => {\r\n                      this.emploees = response.Result;\r\n                      this.loading = false;\r\n                 })\r\n            }\r\n        })\r\n    }\r\n\r\n    public getTime(currentEmploee: UserProfileProject) {\r\n        if (currentEmploee.DateFinishWork == null) return 0;\r\n        if (currentEmploee.DateStartWork == null) return 0;\r\n        let date1 = new Date(Date.parse(currentEmploee.DateStartWork.toString()));\r\n        let date2 = new Date();\r\n        let date3 = new Date(Date.parse(currentEmploee.DateFinishWork.toString()));\r\n        let timeDiff = (date3 > date1) ? Math.abs(date3.getTime() - date1.getTime()) : Math.abs(date2.getTime() - date1.getTime());\r\n        return Math.ceil(timeDiff / (1000 * 3600 * 24)); \r\n    }\r\n\r\n    public showEmploeesDialog(emploee: UserProfileProject) {\r\n        const dialogRef = this.dialog.open(ProjectsEmploeesComponent, {\r\n            width: '1050px',\r\n            data: {projectId: emploee.ProjectId, projectName: emploee.ProjectName, userId: this.userId}\r\n          });\r\n    }\r\n\r\n    public goBack() {\r\n        this.location.back();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/projects/projects-list-for-user/projects-list-for-user.component.ts","module.exports = \"   .my-table-striped > tbody > tr:nth-of-type(odd) {\\r\\n    background-color: #f9f9f9 !important;\\r\\n  }\\r\\n\\r\\n  .cancel:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n  .cancel {\\r\\n    border-width: 1px;\\r\\n    border-color: black;\\r\\n    border-style: solid;\\r\\n    padding-left: 3px;\\r\\n    padding-right: 3px;\\r\\n}\\r\\n\\r\\n  .fa-angle-left:hover {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n  .fa-angle-right:hover {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n  .fa-angle-left {\\r\\n  vertical-align: super;\\r\\n}\\r\\n\\r\\n  .fa-angle-right {\\r\\n  vertical-align: super;\\r\\n}\\r\\n\\r\\n  .scroll-in-modal {\\r\\n  height: 500px; overflow-y: auto; overflow-x: hidden;\\r\\n}\\r\\n\\r\\n  .btn-toggle {\\r\\n  position: relative;\\r\\n  right: -5px !important\\r\\n}\\r\\n\\r\\n  .btn-toggle-in-modal {\\r\\n  position: relative;\\r\\n  right: -5px !important;\\r\\n}\\r\\n\\r\\n  .dropdown-menu.pull-right {\\r\\n  right: 10px !important;\\r\\n}\\r\\n\\r\\n  .link:hover {\\r\\n  cursor: pointer;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-list/projects-list.component.css\n// module id = ./ClientApp/app/components/projects/projects-list/projects-list.component.css\n// module chunks = common","module.exports = \"<modal-wrapper [dialogRef]=\\\"dialogRef\\\">\\r\\n\\r\\n    <div [className]=\\\"getClassForTable()\\\" *ngIf=\\\"projects\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h2 style=\\\"color: #73879C;\\\">Projects</h2>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <a href=\\\"javascript:;\\\" class=\\\"user-profile dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" *permission=\\\"['Super_Admin', 'Admin', 'ProjectManager']\\\">\\r\\n                    <button [className]=\\\"getClassForToggleButton()\\\">\\r\\n                        <span class=\\\"fa fa-plus\\\"></span>\\r\\n                    </button>\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu dropdown-usermenu pull-right\\\">\\r\\n                    <li>\\r\\n                        <a (click)=\\\"createProjectDialog()\\\" class=\\\"side-menu-link\\\">\\r\\n                            Add new Project\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div id=\\\"datatable-responsive_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap no-footer\\\">\\r\\n                    <table class=\\\"table my-table-striped table-bordered projects\\\">\\r\\n                        <thead style=\\\"color: #73879C;\\\">\\r\\n                            <tr>\\r\\n                                <th style=\\\"width: 20%\\\">Project Name</th>\\r\\n                                <th>Team Members</th>\\r\\n                                <th>Date of start</th>\\r\\n                                <th>Comment</th>\\r\\n                                <th></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <ngx-spinner [visible]=\\\"loading\\\" [config]=\\\"spinnerConfig\\\"></ngx-spinner>\\r\\n                            <tr *ngFor=\\\"let project of projects; let i = index\\\">\\r\\n                                <td class=\\\"link\\\"  (click)=\\\"showEmploeesDialog(project)\\\">\\r\\n                                    <a>{{project.Name}}</a>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <ul class=\\\"list-inline\\\">\\r\\n                                        <li *ngIf=\\\"project.EmploeesAvatars.length > 5 && numbers[i][0] > 0\\\" (click)=\\\"decrementIndexes(i)\\\">\\r\\n\\r\\n                                            <i class=\\\"fa fa-angle-left fa-2x\\\"></i>\\r\\n                                        </li>\\r\\n                                        <div style=\\\"display: inline-block;\\\" *ngFor=\\\"let avatar of project.EmploeesAvatars; let j = index\\\">\\r\\n                                            <li *ngIf=\\\"j >= numbers[i][0] && j <= numbers[i][1]\\\">\\r\\n                                                <div class=\\\"black-tooltip\\\">\\r\\n                                                    <img [src]=\\\"avatar\\\" class=\\\"avatar\\\" alt=\\\"Avatar\\\">\\r\\n                                                    <span class=\\\"tooltiptext\\\">{{project.EmploeesPositions[j]}}</span>\\r\\n                                                </div>\\r\\n                                            </li>\\r\\n                                        </div>\\r\\n\\r\\n                                        <li *ngIf=\\\"project.EmploeesAvatars.length > 5 && numbers[i][1] < projects[i].EmploeesAvatars.length - 1\\\" (click)=\\\"incrementIndexes(i)\\\">\\r\\n                                            <i class=\\\"fa fa-angle-right fa-2x \\\"></i>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    {{project.DateBegin| date:'MM/dd/yyyy'}}\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    {{project.Comment}}\\r\\n                                </td>\\r\\n                                <td style=\\\"text-align:right\\\">\\r\\n                                    <a class=\\\"btn btn-primary black-tooltip\\\" (click)=\\\"showClient(project)\\\" *permission=\\\"['Super_Admin', 'Admin', 'ProjectManager']\\\">\\r\\n                                        <i class=\\\"fa fa-male\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">{{getToolTipText(project)}}</span>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-primary black-tooltip\\\" (click)=\\\"showEmploeesDialog(project)\\\">\\r\\n                                        <i class=\\\"fa fa-eye\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">View</span>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-primary black-tooltip\\\" (click)=\\\"editProjectDialog(project, i)\\\" *permission=\\\"['Super_Admin', 'Admin', 'ProjectManager']\\\">\\r\\n                                        <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Edit</span>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"confirmDeleteDialog(project.Id, i)\\\" *permission=\\\"['Super_Admin', 'Admin', 'ProjectManager']\\\">\\r\\n                                        <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Delete</span>\\r\\n                                    </a>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n\\r\\n                    <table-buttons [subject]=\\\"subject\\\">\\r\\n                    </table-buttons>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</modal-wrapper>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/projects/projects-list/projects-list.component.html\n// module id = ./ClientApp/app/components/projects/projects-list/projects-list.component.html\n// module chunks = common","import { Component, OnInit, Input, Optional, Inject, HostListener } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { SPINNER_ANIMATIONS, SPINNER_PLACEMENT, ISpinnerConfig } from '@hardpool/ngx-spinner';\r\nimport { UserStorageService } from '../../../services/user-storage.service';\r\nimport { Project } from '../../../models/project.model';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { ProjectQueryModel } from '../../../models/query-models/project-query.model';\r\nimport { Client } from '../../../models/client.model';\r\nimport { ClientsService } from '../../../services/clients.service';\r\nimport { ClientQueryModel } from '../../../models/query-models/client-query.model';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig} from '@angular/material';\r\nimport { ProjectsEmploeesComponent } from '../projects-emploees/projects-emploees.component'\r\nimport { ProjectsEditComponent } from '../projects-edit/projects-edit.component';\r\nimport { DeleteConfirmationComponent } from '../../modals/delete-confirmation/delete-confirmation.component';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { ProjectsCreateComponent } from '../projects-create/projects-create.component';\r\nimport { UserProfileProjectService } from '../../../services/user-profile-project.service';\r\nimport { ClientsInfoComponent } from '../../clients/clients-info/clients-info.component';\r\n\r\n@Component({\r\n    selector: 'projects-list',\r\n    templateUrl: './projects-list.component.html',\r\n    styleUrls: ['./projects-list.component.css']\r\n})\r\nexport class ProjectsListComponent implements OnInit {\r\n\r\n    newProject: Project = new Project();\r\n\r\n    projects: Array<Project> = new Array<Project>();\r\n\r\n    clients: Array<Client> = new Array<Client>();\r\n\r\n    isSelected: Array<boolean>;\r\n\r\n    newProjectForm: FormGroup;\r\n\r\n    submitAttempt: boolean;\r\n\r\n    loading = false;\r\n\r\n    isAdmin: boolean;\r\n\r\n    isUser: boolean;\r\n    \r\n    isMyPage: boolean;\r\n    \r\n    isAddVisible: boolean;\r\n\r\n    status: string;\r\n\r\n    queryModel: ProjectQueryModel;\r\n\r\n    subject: Subject<any>;\r\n\r\n    subscription: Subscription;\r\n\r\n    numbers: Array<Array<number>>\r\n\r\n    spinnerConfig: ISpinnerConfig = {\r\n        placement: SPINNER_PLACEMENT.block_ui,\r\n        animation: SPINNER_ANIMATIONS.spin_3,\r\n        size: \"3rem\",\r\n        color: \"#1574b3\"\r\n    };\r\n\r\n    constructor(private projectService: ProjectsService,\r\n        private clientsService: ClientsService,\r\n        private userStorageService: UserStorageService,\r\n        private usersService: UsersService,\r\n        private userProfileProject: UserProfileProjectService,\r\n        private route: ActivatedRoute,\r\n        private fBuilder: FormBuilder,\r\n        private dialog: MatDialog,\r\n        private location: Location,\r\n        @Optional() public dialogRef: MatDialogRef<ProjectsListComponent>,\r\n        @Optional() @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    @Input('clientId') clientId: number;\r\n\r\n    ngOnInit() { \r\n        this.subject = new Subject<any>();\r\n        this.queryModel = new ProjectQueryModel();\r\n        this.queryModel.Take =  10;\r\n        this.isAddVisible = false;\r\n        if (this.data != undefined && this.data != null){\r\n            this.clientId = this.data.clientId;\r\n        }\r\n        if (this.clientId != null)\r\n        this.queryModel.ClientId = this.clientId;\r\n        this.queryModel.UserId = this.userStorageService.getId();\r\n        this.loading = true;\r\n\r\n        this.projectService.get(this.queryModel).subscribe(response => {\r\n            this.projects = response.Result;\r\n            this.subject.next({from: \"component\", response: response});\r\n            this.loading = false;\r\n            this.numbers = new Array<Array<number>>(this.projects.length);\r\n            for (let index = 0; index < this.numbers.length; index++) {\r\n                this.numbers[index] = new Array<number>(2);\r\n                this.numbers[index][0] = 0;\r\n                this.numbers[index][1] = Math.min(4, this.projects[index].EmploeesAvatars.length - 1);\r\n            }\r\n            this.projects.forEach(element => {\r\n                if (element.DateBegin != null) {\r\n                    element.DateBegin = new Date(Date.parse(element.DateBegin.toString()));\r\n                    element.DateBegin = (element.DateBegin.getUTCFullYear() > 2010) ? element.DateBegin : null;\r\n                }\r\n                if (element.DateEnd != null) {\r\n                    element.DateEnd = new Date(Date.parse(element.DateEnd.toString()));\r\n                    element.DateEnd = (element.DateEnd.getUTCFullYear() > 2010) ? element.DateEnd : null;\r\n                }\r\n            });\r\n            let queryModelClients = new ClientQueryModel();\r\n            queryModelClients.Take = 10;\r\n            this.clientsService.get(queryModelClients).subscribe(resp =>{\r\n                this.clients = resp.Result;\r\n                this.loading = false;\r\n            })\r\n        })\r\n\r\n        this.subscription = this.subject.asObservable().subscribe(response => {\r\n            if (response.from == \"tablebuttons\") {\r\n                this.queryModel = response.response as ProjectQueryModel;\r\n                if (this.clientId != null)\r\n                this.queryModel.ClientId = this.clientId;\r\n                this.queryModel.UserId = this.userStorageService.getId();\r\n                this.loading = true;\r\n                this.projectService.get(this.queryModel).subscribe(response => {\r\n                this.projects = response.Result;\r\n                this.loading = false;\r\n                this.numbers = new Array<Array<number>>(this.projects.length);\r\n                for (let index = 0; index < this.numbers.length; index++) {\r\n                    this.numbers[index] = new Array<number>(2);\r\n                    this.numbers[index][0] = 0;\r\n                    this.numbers[index][1] = Math.min(4, this.projects[index].EmploeesAvatars.length - 1);\r\n                }\r\n                this.projects.forEach(element => {\r\n                    if (element.DateBegin != null) {\r\n                        element.DateBegin = new Date(Date.parse(element.DateBegin.toString()));\r\n                        element.DateBegin = (element.DateBegin.getUTCFullYear() > 2010) ? element.DateBegin : null;\r\n                    }\r\n                    if (element.DateEnd != null) {\r\n                        element.DateEnd = new Date(Date.parse(element.DateEnd.toString()));\r\n                        element.DateEnd = (element.DateEnd.getUTCFullYear() > 2010) ? element.DateEnd : null;\r\n                    }\r\n                });\r\n                let queryModelClients = new ClientQueryModel();\r\n                queryModelClients.Take = 10;\r\n                this.clientsService.get(queryModelClients).subscribe(resp =>{\r\n                    this.clients = resp.Result;\r\n                    this.loading = false;\r\n                })\r\n            })\r\n            }\r\n        });\r\n\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        this.newProjectForm = this.fBuilder.group({\r\n            Name: ['', [\r\n                Validators.required\r\n            ]],\r\n            BeginDate: [],\r\n            Users: [],\r\n            EndDate: [],\r\n            Comment:[],\r\n            selectClient:['', [\r\n                Validators.required\r\n            ]],\r\n        });\r\n    }\r\n\r\n    public confirmDeleteDialog(id, index) {\r\n\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.position = { top: '0' };\r\n        dialogConfig.autoFocus = false;\r\n\r\n        this.dialog.open(DeleteConfirmationComponent, dialogConfig)\r\n            .afterClosed().subscribe(dialogResult => {\r\n                if (dialogResult)\r\n                    this.delete(id, index);\r\n            });\r\n    }\r\n\r\n    public delete(index: number, indexOnArray: number) {\r\n        this.projectService.delete(index).subscribe((result) => {\r\n            this.queryModel.UserId = this.userStorageService.getId();\r\n            this.loading = true;\r\n            this.projectService.get(this.queryModel).subscribe(response => {\r\n            this.projects = response.Result;\r\n            this.subject.next({from: \"component\", response: response});\r\n            this.loading = false;\r\n            let queryModelClients = new ClientQueryModel();\r\n            this.clientsService.get(queryModelClients).subscribe(resp =>{\r\n                this.clients = resp.Result;\r\n                this.loading = false;\r\n            })\r\n            this.status = \"Deleted\";\r\n        })\r\n        })\r\n    }\r\n\r\n    public menuAddNew() {\r\n        this.isAddVisible = true;\r\n        this.newProject = new Project();\r\n    }\r\n\r\n    public getTime(currentProject: Project) {\r\n        let date1 = new Date(Date.parse(currentProject.DateBegin.toString()));\r\n        let date2 = new Date();\r\n        let date3 = new Date(Date.parse(currentProject.DateEnd.toString()));\r\n        let timeDiff = (date3 > date1) ? Math.abs(date3.getTime() - date1.getTime()) : Math.abs(date2.getTime() - date1.getTime());\r\n        return Math.ceil(timeDiff / (1000 * 3600 * 24)); \r\n    }\r\n\r\n    public showEmploeesDialog(project: Project) {\r\n        const dialogRef = this.dialog.open(ProjectsEmploeesComponent, {\r\n            width: '1500px',\r\n            data: {projectId: project.Id, projectName: project.Name}\r\n          });\r\n\r\n          dialogRef.afterClosed().subscribe(result => {\r\n            this.isAddVisible = false;\r\n            if (this.clientId != null)\r\n            this.queryModel.ClientId = this.clientId;\r\n            this.queryModel.UserId = this.userStorageService.getId();\r\n            this.projectService.get(this.queryModel).subscribe(response => {\r\n            this.projects = response.Result;\r\n            })\r\n            this.initForm();\r\n            });\r\n    }\r\n\r\n    public editProjectDialog(project: Project, i: number) {\r\n        const dialogRef = this.dialog.open(ProjectsEditComponent, {\r\n            width: '800px',\r\n            data: {projectId: project.Id, projectName: project.Name, clientId: (this.data != undefined && this.data != null) ? this.data.clientId : null}\r\n          });\r\n\r\n          dialogRef.afterClosed().subscribe(result => {\r\n            this.isAddVisible = false;\r\n            if (this.clientId != null)\r\n            this.queryModel.ClientId = this.clientId;\r\n            this.queryModel.UserId = this.userStorageService.getId();\r\n            this.projectService.get(this.queryModel).subscribe(response => {\r\n            this.projects = response.Result;\r\n            })\r\n            this.initForm();\r\n            });\r\n    }\r\n\r\n    public createProjectDialog() {\r\n        const dialogRef2 = this.dialog.open(ProjectsCreateComponent, {\r\n            width: '800px',\r\n            data: {fromProjectPage: true, clientId : this.clientId }\r\n          });\r\n\r\n          dialogRef2.afterClosed().subscribe(result => {\r\n            if (this.clientId != null)\r\n            this.queryModel.ClientId = this.clientId;\r\n            this.queryModel.UserId = this.userStorageService.getId();\r\n            this.loading = true;\r\n            this.projectService.get(this.queryModel).subscribe(response => {\r\n                this.projects = response.Result;\r\n                this.loading = false;\r\n                this.numbers = new Array<Array<number>>(this.projects.length);\r\n                for (let index = 0; index < this.numbers.length; index++) {\r\n                    this.numbers[index] = new Array<number>(2);\r\n                    this.numbers[index][0] = 0;\r\n                    this.numbers[index][1] = Math.min(4, this.projects[index].EmploeesAvatars.length - 1);\r\n                }\r\n                this.projects.forEach(element => {\r\n                    if (element.DateBegin != null) {\r\n                        element.DateBegin = new Date(Date.parse(element.DateBegin.toString()));\r\n                        element.DateBegin = (element.DateBegin.getUTCFullYear() > 2010) ? element.DateBegin : null;\r\n                    }\r\n                    if (element.DateEnd != null) {\r\n                        element.DateEnd = new Date(Date.parse(element.DateEnd.toString()));\r\n                        element.DateEnd = (element.DateEnd.getUTCFullYear() > 2010) ? element.DateEnd : null;\r\n                    }\r\n                });\r\n            })\r\n            this.initForm();\r\n          })\r\n    }\r\n\r\n    public goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n    public showClient(project: Project){\r\n        if (project.ClientId != null && project.ClientId != undefined) {\r\n        const dialogRef = this.dialog.open(ClientsInfoComponent, {\r\n            width: '800px',\r\n            data: {clientId: project.ClientId, fullInfo: true}\r\n          });\r\n        }\r\n    }\r\n\r\n    \r\n    public cancel() {\r\n        if (this.dialogRef != null && this.dialogRef != undefined) this.dialogRef.close();\r\n    }\r\n\r\n    \r\n    @HostListener('window:keyup', ['$event'])\r\n    keyEvent(event: KeyboardEvent) {\r\n      \r\n      if (event.keyCode === 13) {\r\n        this.cancel();\r\n      }\r\n  \r\n      if (event.keyCode === 27) {\r\n          this.cancel();\r\n      }\r\n    }  \r\n\r\n    public decrementIndexes(i: number) {\r\n        if (this.numbers[i][0] > 0) {\r\n            this.numbers[i][0]--;\r\n            this.numbers[i][1]--;\r\n        }\r\n\r\n    }\r\n\r\n    public incrementIndexes(i: number) {\r\n        if (this.numbers[i][1] < this.projects[i].EmploeesAvatars.length - 1) {\r\n            this.numbers[i][0]++;\r\n            this.numbers[i][1]++;\r\n        }\r\n    }\r\n    \r\n    public getClassForTable() {\r\n        if (this.data != undefined && this.data != null) {\r\n            return \"card x_panel scroll-in-modal\";\r\n        }\r\n        else return \"card x_panel\";\r\n    }\r\n\r\n    public getClassForClientButton(project: Project){\r\n        if (project.ClientId != null && project.ClientId != undefined) {\r\n            return \"btn btn-primary black-tooltip\";\r\n        }\r\n        else return \"btn btn-primary black-tooltip disabled\";\r\n    }\r\n\r\n    public getToolTipText(project: Project){\r\n        if (project.ClientId != null && project.ClientId != undefined) {\r\n            return \"Client\";\r\n        }\r\n        else return \"Client not exist\";\r\n    }\r\n\r\n    public getClassForToggleButton(){\r\n        if (this.data != undefined && this.data != null) {\r\n            return \"btn btn-primary btn-toggle-in-modal\";\r\n        }\r\n        else return \"btn btn-primary btn-toggle\";\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/projects/projects-list/projects-list.component.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PermissionGuard } from '../../guards/permission.guard';\r\nimport { ProjectsListComponent } from './projects-list/projects-list.component';\r\nimport { ProjectsEmploeesComponent } from './projects-emploees/projects-emploees.component';\r\nimport { ProjectsEditComponent } from './projects-edit/projects-edit.component';\r\nimport { ProjectsEmploeesEditComponent } from './projects-emploees-edit/projects-emploees-edit.component';\r\n\r\nconst routes: Routes = [\r\n    { path: ':id/emploees', component: ProjectsEmploeesComponent, canActivate:[PermissionGuard], data:{ roles: ['Super_Admin', 'Admin', 'ProjectManager'], forCurrentUser: false}},\r\n    { path: '', component: ProjectsListComponent, canActivate:[PermissionGuard], data:{ roles: ['Super_Admin', 'Admin', 'ProjectManager', 'HumanResource'], forCurrentUser: false}},\r\n    { path: ':id/edit', component: ProjectsEditComponent, canActivate:[PermissionGuard], data:{ roles: ['Super_Admin', 'Admin', 'ProjectManager'], forCurrentUser: false}},\r\n    { path: ':id/emploees/:e_id/edit', component: ProjectsEmploeesEditComponent, canActivate:[PermissionGuard], data:{ roles: ['Super_Admin', 'Admin', 'ProjectManager'], forCurrentUser: false}}\r\n]; \r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    providers: [PermissionGuard],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProjectsRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/projects/projects-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { ProjectsListComponent } from './projects-list/projects-list.component';\r\nimport { ProjectsEmploeesComponent } from './projects-emploees/projects-emploees.component';\r\nimport { ProjectsEditComponent } from './projects-edit/projects-edit.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../modules/shared.module';\r\nimport { ProjectsRoutingModule } from './projects-routing.module';\r\nimport { ProjectsEmploeesEditComponent } from './projects-emploees-edit/projects-emploees-edit.component';\r\nimport { ProjectsListForUserComponent } from './projects-list-for-user/projects-list-for-user.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ProjectsListComponent,\r\n        ProjectsEmploeesComponent,\r\n        ProjectsEditComponent,\r\n        ProjectsEmploeesEditComponent,\r\n        ProjectsListForUserComponent,],\r\n    imports: [ \r\n        ProjectsRoutingModule,\r\n        SharedModule\r\n    ],\r\n    exports: [RouterModule,\r\n        ProjectsListComponent,\r\n        ProjectsListForUserComponent,\r\n        ProjectsEditComponent],\r\n    providers: []\r\n})\r\nexport class ProjectsModule {}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/projects/projects.module.ts","module.exports = \"<div class=\\\"card x_panel\\\">\\r\\n    <div id=\\\"divDataBody\\\" class=\\\"container entity\\\">\\r\\n        <div class=\\\"row formTitle\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h2 class=\\\"title\\\">Update work on weekend</h2>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4 text-right\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <button class=\\\"go-back btn btn-round btn-primary\\\" (click)=\\\"goBack()\\\">\\r\\n                                    <i class=\\\"fa fa-arrow-left\\\"></i>\\r\\n                                    Back\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <form name=\\\"addpost\\\" class=\\\"form-horizontal  container-fluid\\\">\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                        <mat-datepicker #picker1></mat-datepicker>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess6\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" name=\\\"BeginDate\\\" [(ngModel)]=\\\"overtime.DateBegin\\\">\\r\\n                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            Start Date\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                        <mat-datepicker #picker2></mat-datepicker>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess6\\\" [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" name=\\\"EndDate\\\" [(ngModel)]=\\\"overtime.DateEnd\\\">\\r\\n                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            End Date\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Comment\\\" name=\\\"Comment\\\" [(ngModel)]=\\\"overtime.Comment\\\">\\r\\n                        <span class=\\\"fa fa-comment form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            Comment\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control  has-feedback-left\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Count days\\\" name=\\\"CountDays\\\" [(ngModel)]=\\\"overtime.CountDays\\\">\\r\\n                        <span class=\\\"fa fa-calculator form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        <span class=\\\"error-message\\\" *ngIf=\\\"cntDayErMsg\\\">\\r\\n                            {{cntDayErMsg}}\\r\\n                        </span>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            CountDays\\r\\n                        </span>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback\\\">\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-8 col-md-offset-2 col-xs-12 \\\">\\r\\n                        <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                            <div class=\\\"form-group col-md-12 col-xs-12 text-center\\\">\\r\\n                                <button class=\\\"btn btn-primary alignCenterBtn\\\" (click)=\\\"updateOvertime(overtime)\\\">Save</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/overtimes/overtimes-edit/overtimes-edit.component.html\n// module id = ./ClientApp/app/components/work-activity/overtimes/overtimes-edit/overtimes-edit.component.html\n// module chunks = common","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\nimport { OvertimeService } from '../../../../services/overtime.service';\r\nimport { Overtime } from '../../../../models/overtime.model';\r\n\r\n@Component({\r\n    templateUrl: './overtimes-edit.component.html'\r\n})\r\n\r\nexport class OvertimesEditComponent implements OnInit {\r\n    overtime: Overtime = new Overtime();\r\n    beginDateErMsg: string;\r\n    endDateErMsg: string;\r\n    cntDayErMsg: string;\r\n    private id: number;\r\n\r\n    constructor(\r\n        private overtimeService: OvertimeService,\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private userStorageService: UserStorageService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.id = +params['id'];\r\n            this.overtimeService.getById(this.id).subscribe(responce => {\r\n                this.overtime = responce;\r\n                this.overtime.DateBegin = new Date(Date.parse(this.overtime.DateBegin.toString()));\r\n                this.overtime.DateEnd = new Date(Date.parse(this.overtime.DateEnd.toString()));\r\n            });\r\n        });\r\n    }\r\n\r\n    public updateOvertime(newOvertime: Overtime) {\r\n        if (this.isVacationsFormValid(newOvertime)) {\r\n            this.overtime.DateBegin = new Date(Date.parse(this.overtime.DateBegin.toString()));\r\n            this.overtime.DateBegin.setMinutes(this.overtime.DateBegin.getMinutes() - this.overtime.DateBegin.getTimezoneOffset());\r\n            this.overtime.DateEnd = new Date(Date.parse(this.overtime.DateEnd.toString()));\r\n            this.overtime.DateEnd.setMinutes(this.overtime.DateEnd.getMinutes() - this.overtime.DateEnd.getTimezoneOffset());\r\n            this.overtimeService.update(this.overtime).subscribe(response => {\r\n                this.location.back();\r\n            });\r\n        }\r\n    };\r\n\r\n    isVacationsFormValid(newOvertime: Overtime): boolean {\r\n        if (newOvertime.DateBegin == null) {\r\n            this.beginDateErMsg = \"Begin Date is required field\"\r\n            return false;\r\n        }\r\n        else if (newOvertime.DateEnd == null) {\r\n            this.endDateErMsg = \"End Date is required field\"\r\n            return false;\r\n        }\r\n        else if (newOvertime.DateEnd.getTime() < newOvertime.DateBegin.getTime()) {\r\n            this.endDateErMsg = \"End Date should be more than Begin Date\"\r\n            return false;\r\n        }\r\n        else if (newOvertime.CountDays < 1) {\r\n            this.cntDayErMsg = \"Count should more than 1\";\r\n            return false;\r\n        }\r\n\r\n        this.beginDateErMsg = null;\r\n        this.endDateErMsg = null;\r\n        return true;\r\n    }\r\n\r\n    goBack() {\r\n        this.location.back();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/overtimes/overtimes-edit/overtimes-edit.component.ts","module.exports = \"td, th {\\r\\n    border-top: 0px !important;\\r\\n    border-bottom: 0px !important;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/overtimes/overtimes-list/overtimes-list.component.css\n// module id = ./ClientApp/app/components/work-activity/overtimes/overtimes-list/overtimes-list.component.css\n// module chunks = common","module.exports = \"<user-overtimes>\\r\\n    \\r\\n</user-overtimes>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/overtimes/overtimes-list/overtimes-list.component.html\n// module id = ./ClientApp/app/components/work-activity/overtimes/overtimes-list/overtimes-list.component.html\n// module chunks = common","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\n\r\nimport { Overtime } from '../../../../models/overtime.model';\r\nimport { User } from '../../../../models/user.model';\r\nimport { OvertimeService } from '../../../../services/overtime.service';\r\nimport { UsersService } from '../../../../services/users.service';\r\nimport { OvertimeQueryModel } from '../../../../models/query-models/overtime-query.model';\r\nimport { UserQueryModel } from '../../../../models/query-models/user-query.model';\r\n\r\n@Component({\r\n    templateUrl: './overtimes-list.component.html',\r\n    styleUrls: ['./overtimes-list.component.css']\r\n})\r\n\r\nexport class OvertimesListComponent implements OnInit {\r\n    overtimes: Array<Overtime> = new Array<Overtime>();\r\n    newOvertime: Overtime = new Overtime();\r\n    users: Array<User> = new Array<User>();\r\n    status: string;\r\n    isAdmin: boolean;\r\n    isUser: boolean;\r\n    isAddVisible: boolean;\r\n    selectedUser = new User();\r\n\r\n    constructor(\r\n        private overtimeService: OvertimeService,\r\n        private userStorageService: UserStorageService,\r\n        private usersService: UsersService,\r\n        private location: Location,\r\n\r\n    ) {\r\n       \r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/overtimes/overtimes-list/overtimes-list.component.ts","module.exports = \"   .my-table-striped > tbody > tr:nth-of-type(odd) {\\r\\n    background-color: #f9f9f9 !important;\\r\\n  }\\r\\n\\r\\n  .link:hover {\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  input:-moz-read-only {\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n  input:read-only {\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n    cursor: pointer;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/overtimes/overtimes-user-list/overtimes-user-list.component.css\n// module id = ./ClientApp/app/components/work-activity/overtimes/overtimes-user-list/overtimes-user-list.component.css\n// module chunks = common","module.exports = \"<div class=\\\"card x_panel\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h2>{{ 'Work on weekends' }}</h2>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 text-right toggle-div\\\" *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\">\\r\\n                    <a href=\\\"javascript:;\\\" class=\\\"user-profile dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n                        <button class=\\\"btn btn-primary toggle-button\\\">\\r\\n                            <span class=\\\"fa fa-plus\\\"></span>\\r\\n                        </button>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu dropdown-usermenu pull-right\\\">\\r\\n                        <li>\\r\\n                            <a (click)=\\\"menuAddNew()\\\" class=\\\"side-menu-link\\\">\\r\\n                                Add working day(s)\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div id=\\\"datatable-responsive_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap no-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form [formGroup]=\\\"newOvertimeForm\\\" (submit)=\\\"add(newOvertime)\\\">\\r\\n                    <table class=\\\"table my-table-striped table-bordered projects\\\" [formGroup]=\\\"newOvertimeForm\\\" (submit)=\\\"add(newOvertime)\\\">\\r\\n                        <thead style=\\\"color: #73879C;\\\">\\r\\n                            <tr>\\r\\n                                <th *ngIf=\\\"userId == null\\\">User</th>\\r\\n                                <th style=\\\"width:19%\\\">Count</th>\\r\\n                                <th>Begin Date</th>\\r\\n                                <th>End Date</th>\\r\\n                                <th>Comment</th>\\r\\n                                <th *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\" style=\\\"width:12%\\\"></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngIf=\\\"isAddVisible\\\">\\r\\n                                <td *ngIf=\\\"userId == null\\\">\\r\\n                                    <select class=\\\"select2_single form-control\\\" [(ngModel)]=\\\"newOvertime.UserProfileId\\\" formControlName=\\\"SelectedUser\\\" tabindex=\\\"-1\\\">\\r\\n                                        <option *ngFor=\\\"let selectUser of users; let i = index\\\" [value]=\\\"selectUser.UserProfileId\\\">\\r\\n                                            {{ selectUser.FirstName }} {{ selectUser.LastName }}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Count days\\\" formControlName=\\\"CountDays\\\" [(ngModel)]=\\\"newOvertime.CountDays\\\" style=\\\"width: inherit;\\\" disabled>\\r\\n                                        <span class=\\\"fa fa-calculator form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        <span class=\\\"tooltiptext\\\">\\r\\n                                            Count\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                                        <mat-datepicker #picker1></mat-datepicker>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess7\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Begin Date\\\" [min]=\\\"minVacationDate\\\" [max]=\\\"maxVacationDate\\\" formControlName=\\\"BeginDate\\\" [(ngModel)]=\\\"newOvertime.DateBegin\\\" (ngModelChange)=\\\"calcOvertimeDays(newOvertime)\\\" (click)=\\\"picker1.open()\\\" readonly>\\r\\n                                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                                        <span class=\\\"tooltiptext\\\">\\r\\n                                            Start of work at home\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"error-message\\\" *ngIf=\\\"newOvertimeForm.get('BeginDate').errors\\\">\\r\\n                                        <span class=\\\"error-message\\\" *ngIf=\\\"newOvertimeForm.get('BeginDate').errors.required && submitAttempt\\\">\\r\\n                                            Start Date is required\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <span class=\\\"error-message\\\" *ngIf=\\\"isBeginDateIncorrect\\\">\\r\\n                                        Start Date should be more than today\\r\\n                                    </span>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                                        <mat-datepicker #picker2></mat-datepicker>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess8\\\" [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [min]=\\\"minVacationDate\\\" [max]=\\\"maxVacationDate\\\" formControlName=\\\"EndDate\\\" [(ngModel)]=\\\"newOvertime.DateEnd\\\" (ngModelChange)=\\\"calcOvertimeDays(newOvertime)\\\" (click)=\\\"picker2.open()\\\" readonly>\\r\\n                                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                                        <span class=\\\"tooltiptext\\\">\\r\\n                                            End of work at home\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"error-message\\\" *ngIf=\\\"newOvertimeForm.get('EndDate').errors\\\">\\r\\n                                        <span class=\\\"error-message\\\" *ngIf=\\\"newOvertimeForm.get('EndDate').errors.required && submitAttempt\\\">\\r\\n                                            End Date is required\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <span class=\\\"error-message\\\" *ngIf=\\\"isEndDateIncorrect\\\">\\r\\n                                        End Date should be more than Begin Date and than today\\r\\n                                    </span>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Comment\\\" formControlName=\\\"Comment\\\" [(ngModel)]=\\\"newOvertime.Comment\\\">\\r\\n                                        <span class=\\\"fa fa-comment form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        <span class=\\\"tooltiptext\\\">\\r\\n                                            Comment\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                                <td style=\\\"text-align:right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-primary black-tooltip\\\">\\r\\n                                        <i class=\\\"fa fa-check\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Save</span>\\r\\n                                    </button>\\r\\n                                    <button class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"isAddVisible = false\\\">\\r\\n                                        <i class=\\\"fa fa-close\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Cancel</span>\\r\\n                                    </button>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <ngx-spinner [visible]=\\\"loading\\\" [config]=\\\"spinnerConfig\\\"></ngx-spinner>\\r\\n                            <tr *ngFor=\\\"let overtime of overtimes; let i = index\\\">\\r\\n                                <td *ngIf=\\\"userId == null\\\" class=\\\"link\\\" (click)=\\\"goToUser(overtime)\\\"><span>{{overtime.UserProfile.FirstName}} {{overtime.UserProfile.LastName}}</span></td>\\r\\n                                <td><span>{{overtime.CountDays}}</span></td>\\r\\n                                <td><span>{{overtime.DateBegin | date: 'MM/dd/yyyy'}}</span></td>\\r\\n                                <td><span>{{overtime.DateEnd| date: 'MM/dd/yyyy'}}</span></td>\\r\\n                                <td class=\\\"ellipsis\\\">{{overtime.Comment}}</td>\\r\\n                                <td [id]=\\\"userId\\\" *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\" style=\\\"text-align:right\\\">\\r\\n                                    <a class=\\\"btn btn-primary black-tooltip\\\" routerLink=\\\"/workactivities/overtimes/{{overtime.Id}}/edit\\\">\\r\\n                                        <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Edit</span>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"confirmDeleteDialog(overtime.Id, i)\\\">\\r\\n                                        <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Delete</span>\\r\\n                                    </a>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <table-buttons [subject]=\\\"subject\\\">\\r\\n\\r\\n                    </table-buttons>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/overtimes/overtimes-user-list/overtimes-user-list.component.html\n// module id = ./ClientApp/app/components/work-activity/overtimes/overtimes-user-list/overtimes-user-list.component.html\n// module chunks = common","﻿import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\n\r\nimport { Overtime } from '../../../../models/overtime.model';\r\nimport { OvertimeService } from '../../../../services/overtime.service';\r\nimport { OvertimeQueryModel } from '../../../../models/query-models/overtime-query.model';\r\nimport { SickDayQueryModel } from '../../../../models/query-models/sick-day-query.model';\r\nimport { User } from '../../../../models/user.model';\r\nimport { UsersService } from '../../../../services/users.service';\r\nimport { UserQueryModel } from '../../../../models/query-models/user-query.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { SPINNER_ANIMATIONS, SPINNER_PLACEMENT, ISpinnerConfig } from '@hardpool/ngx-spinner';\r\nimport { MatDialogConfig, MatDialog } from '@angular/material';\r\nimport { DeleteConfirmationComponent } from '../../../modals/delete-confirmation/delete-confirmation.component';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n    selector: 'user-overtimes',\r\n    templateUrl: './overtimes-user-list.component.html',\r\n    styleUrls: ['./overtimes-user-list.component.css']\r\n})\r\n\r\nexport class OvertimeUserListComponent implements OnInit {\r\n    overtimes: Array<Overtime> = new Array<Overtime>();\r\n    newOvertime: Overtime = new Overtime();\r\n    users: Array<User> = new Array<User>();\r\n    id: number;\r\n    status: string;\r\n    isAddVisible: boolean;\r\n    selectedUser = new User();\r\n    newOvertimeForm: FormGroup;\r\n    minOvertimeDate: Date;\r\n    maxOvertimeDate: Date;\r\n    submitAttempt: boolean;\r\n    isBeginDateIncorrect = false;\r\n    isEndDateIncorrect = false;\r\n    loading = false;\r\n    queryModel: OvertimeQueryModel;\r\n    subject: Subject<any>;\r\n    subscription: Subscription;\r\n\r\n    @Input('userId') userId: number;\r\n\r\n    spinnerConfig: ISpinnerConfig = {\r\n            placement: SPINNER_PLACEMENT.block_ui,\r\n            animation: SPINNER_ANIMATIONS.spin_3,\r\n            size: \"3rem\",\r\n            color: \"#1574b3\"\r\n        };\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private userStorageService: UserStorageService,\r\n        private overtimeService: OvertimeService,\r\n        private usersService: UsersService,\r\n        private fBuilder: FormBuilder,\r\n        private location: Location,\r\n        private dialog: MatDialog,\r\n        private router: Router\r\n    ) {\r\n\r\n        \r\n    };\r\n\r\n    ngOnInit() {\r\n        this.subject = new Subject<any>();\r\n\r\n        this.isAddVisible = false;\r\n        this.id = this.userId;\r\n        this.queryModel = new OvertimeQueryModel();\r\n        this.queryModel.Take =  10;\r\n        if (this.id != null) this.queryModel.UserId = this.id;\r\n        this.loading = true;\r\n            this.overtimeService.get(this.queryModel).subscribe(response => {\r\n                this.overtimes = response.Result;\r\n                this.subject.next({from: \"component\", response: response});\r\n                this.overtimes.forEach((value, index, array) => {\r\n                    value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                    value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                });\r\n                this.overtimes.sort((x, y) => {\r\n                    if (x.DateBegin > y.DateBegin)\r\n                        return -1;\r\n                    if (x.DateBegin < y.DateBegin)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                this.loading = false;\r\n            });\r\n            this.usersService.get(new UserQueryModel()).subscribe(response => {\r\n                this.users = response.Result;\r\n                }); \r\n\r\n\r\n                this.subscription = this.subject.asObservable().subscribe(response => {\r\n                    if (response.fron == \"tablebuttons\") {\r\n                        this.queryModel = response.response as OvertimeQueryModel;\r\n                        this.id = this.userId;\r\n                        if (this.id != null) this.queryModel.UserId = this.id;\r\n                        this.loading = true;\r\n                            this.overtimeService.get(this.queryModel).subscribe(response => {\r\n                                this.overtimes = response.Result;\r\n                                this.overtimes.forEach((value, index, array) => {\r\n                                    value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                                    value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                                });\r\n                                this.overtimes.sort((x, y) => {\r\n                                    if (x.DateBegin > y.DateBegin)\r\n                                        return -1;\r\n                                    if (x.DateBegin < y.DateBegin)\r\n                                        return 1;\r\n                                    return 0;\r\n                                });\r\n                                this.loading = false;\r\n                            });\r\n                    }\r\n                });\r\n        this.initDates();\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        this.newOvertimeForm = this.fBuilder.group({\r\n            CountDays: ['', Validators.min(1)],\r\n            BeginDate: ['', [\r\n                Validators.required\r\n            ]],\r\n            EndDate: ['', [\r\n                Validators.required\r\n            ]],\r\n            Comment: [],\r\n            SelectedUser:[]\r\n        });\r\n    }\r\n\r\n    initDates() {\r\n        //Allow begin date vacation and end date vacation\r\n        //only in previous or in the next year\r\n        this.minOvertimeDate = new Date(new Date().getFullYear(), 0, 1);//Start of the year\r\n        this.minOvertimeDate.setFullYear(this.minOvertimeDate.getFullYear() - 1);\r\n        this.maxOvertimeDate = new Date(new Date().getFullYear(), 11, 31);//End of the year\r\n        this.maxOvertimeDate.setFullYear(this.maxOvertimeDate.getFullYear() + 1);\r\n    }\r\n\r\n    delete(index: number, indexOnArray: number) {\r\n        this.overtimeService.delete(index).subscribe((result) => {\r\n            this.usersService.updateVacDays(this.overtimes[indexOnArray].CountDays);\r\n            this.queryModel.Take =  10;\r\n            if (this.id != null) this.queryModel.UserId = this.id;\r\n            this.loading = true;\r\n            this.overtimeService.get(this.queryModel).subscribe(response => {\r\n                this.overtimes = response.Result;\r\n                this.subject.next({from: \"component\", response: response});\r\n                this.overtimes.forEach((value, index, array) => {\r\n                    value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                    value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                });\r\n                this.overtimes.sort((x, y) => {\r\n                    if (x.DateBegin > y.DateBegin)\r\n                        return -1;\r\n                    if (x.DateBegin < y.DateBegin)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                this.loading = false;\r\n            });\r\n            this.usersService.get(new UserQueryModel()).subscribe(response => {\r\n                this.users = response.Result;\r\n                }); \r\n\r\n            this.status = \"Deleted\";\r\n        })\r\n    }\r\n\r\n    public confirmDeleteDialog(id, index) {\r\n\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.position = { top: '0' };\r\n        dialogConfig.autoFocus = false;\r\n\r\n        this.dialog.open(DeleteConfirmationComponent, dialogConfig)\r\n            .afterClosed().subscribe(dialogResult => {\r\n                if (dialogResult)\r\n                    this.delete(id, index);\r\n            });\r\n    }\r\n\r\n    public add(newOvertime: Overtime) {\r\n        if (this.newOvertimeForm.valid && !this.isBeginDateIncorrect && !this.isEndDateIncorrect) {\r\n            this.submitAttempt = false;\r\n        newOvertime.DateBegin = new Date(Date.parse(newOvertime.DateBegin.toString()));\r\n        newOvertime.DateBegin.setMinutes(newOvertime.DateBegin.getMinutes() - newOvertime.DateBegin.getTimezoneOffset());\r\n        newOvertime.DateEnd = new Date(Date.parse(newOvertime.DateEnd.toString()));\r\n        newOvertime.DateEnd.setMinutes(newOvertime.DateEnd.getMinutes() - newOvertime.DateEnd.getTimezoneOffset());\r\n        newOvertime.UserProfileId = (this.id != null && this.id != 0  && this.id != undefined) ? this.id : newOvertime.UserProfileId;\r\n        this.overtimeService.create(newOvertime).subscribe((response) => {\r\n            this.newOvertime = response;\r\n            if (this.newOvertime.Id != 0) {\r\n                this.usersService.updateVacDays(this.newOvertime.CountDays*(-1));\r\n                this.queryModel = new OvertimeQueryModel();\r\n                this.queryModel.UserId = this.id;\r\n                this.overtimeService.get(this.queryModel).subscribe(response => {\r\n                    this.overtimes = response.Result;\r\n                    this.subject.next({from: \"component\", response: response});\r\n                    this.overtimes.forEach((value, index, array) => {\r\n                        value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                        value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                    });\r\n                });\r\n                this.isAddVisible = false;\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        this.submitAttempt = true;\r\n    }\r\n    }\r\n\r\n    public calcOvertimeDays(newOvertime: any) {\r\n        let currentDate = new Date();\r\n        currentDate.setHours(0);\r\n        currentDate.setMinutes(0);\r\n        currentDate.setSeconds(0);\r\n        this.isBeginDateIncorrect = false;\r\n        this.isEndDateIncorrect = false;\r\n        if (newOvertime.DateBegin && newOvertime.DateEnd) {\r\n            if (newOvertime.DateEnd.getTime() < newOvertime.DateBegin.getTime()) {\r\n                this.isEndDateIncorrect = true;\r\n            }\r\n            else {\r\n                this.newOvertime.CountDays = ((newOvertime.DateEnd.getTime() - newOvertime.DateBegin.getTime()) / 86400000) + 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    public menuAddNew() {\r\n        this.isAddVisible = true;\r\n        this.newOvertime = new Overtime();\r\n    }\r\n\r\n    public goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n    public goToUser(overtime: Overtime){\r\n        this.router.navigateByUrl('/users/'+overtime.UserProfileId+'/info')\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/overtimes/overtimes-user-list/overtimes-user-list.component.ts","module.exports = \"<div class=\\\"card x_panel\\\" *ngIf=\\\"sickDay\\\">\\r\\n    <div id=\\\"divDataBody\\\" class=\\\"container entity\\\">\\r\\n        <div class=\\\"row formTitle\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h2 class=\\\"title\\\">Update sick day</h2>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <form name=\\\"addpost\\\" class=\\\"form-horizontal  container-fluid\\\">\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                        <mat-datepicker #picker1></mat-datepicker>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess6\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" name=\\\"BeginDate\\\" [(ngModel)]=\\\"sickDay.DateBegin\\\">\\r\\n                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            Start Date\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                        <mat-datepicker #picker2></mat-datepicker>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess6\\\" [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" name=\\\"EndDate\\\" [(ngModel)]=\\\"sickDay.DateEnd\\\">\\r\\n                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            End Date\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Comment\\\" name=\\\"Comment\\\" [(ngModel)]=\\\"sickDay.Comment\\\">\\r\\n                        <span class=\\\"fa fa-comment form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            Comment\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Count days\\\" name=\\\"CountDays\\\" [(ngModel)]=\\\"sickDay.CountDays\\\">\\r\\n                        <span class=\\\"fa fa-calculator form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        <span class=\\\"error-message\\\" *ngIf=\\\"cntDayErMsg\\\">\\r\\n                            {{cntDayErMsg}}\\r\\n                        </span>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            CountDays\\r\\n                        </span>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback\\\">\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-8 col-md-offset-2 col-xs-12 \\\">\\r\\n                        <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                            <div class=\\\"form-group col-md-12 col-xs-12  text-center\\\">\\r\\n                                <button class=\\\"btn btn-primary alignCenterBtn\\\" (click)=\\\"updateSickDay(sickDay)\\\">Save</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/sickdays/sickdays-edit/sickdays-edit.component.html\n// module id = ./ClientApp/app/components/work-activity/sickdays/sickdays-edit/sickdays-edit.component.html\n// module chunks = common","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\nimport { SickDayService } from '../../../../services/sick-day.service';\r\nimport { SickDay } from '../../../../models/sick-day.model';\r\n\r\n@Component({\r\n    templateUrl: './sickdays-edit.component.html'\r\n})\r\n\r\nexport class SickDaysEditComponent implements OnInit {\r\n    sickDay: SickDay;\r\n    private id: any;\r\n    cntDayErMsg: string;\r\n    beginDateErMsg: string;\r\n    endDateErMsg: string;\r\n\r\n    constructor(\r\n        private sickDayService: SickDayService,\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private userStorageService: UserStorageService,\r\n\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.id = +params['id'];\r\n            this.sickDayService.getById(this.id).subscribe(responce => {\r\n                this.sickDay = responce;\r\n                this.sickDay.DateBegin = new Date(Date.parse(this.sickDay.DateBegin.toString()));\r\n                this.sickDay.DateEnd = new Date(Date.parse(this.sickDay.DateEnd.toString()));\r\n            });\r\n        });\r\n    }\r\n\r\n    public updateSickDay(newSickDay: SickDay) {\r\n        if (this.isVacationsFormValid(newSickDay)) {\r\n            this.sickDay.DateBegin = new Date(Date.parse(this.sickDay.DateBegin.toString()));\r\n            this.sickDay.DateBegin.setMinutes(this.sickDay.DateBegin.getMinutes() - this.sickDay.DateBegin.getTimezoneOffset());\r\n            this.sickDay.DateEnd = new Date(Date.parse(this.sickDay.DateEnd.toString()));\r\n            this.sickDay.DateEnd.setMinutes(this.sickDay.DateEnd.getMinutes() - this.sickDay.DateEnd.getTimezoneOffset());\r\n            this.sickDayService.update(this.sickDay).subscribe(response => {\r\n                this.location.back();\r\n            });\r\n        }\r\n    };\r\n\r\n    public isVacationsFormValid(newSickDay: SickDay): boolean {\r\n        if (newSickDay.DateBegin == null) {\r\n            this.beginDateErMsg = \"Begin Date is required field\"\r\n            return false;\r\n        }\r\n        else if (newSickDay.DateEnd == null) {\r\n            this.endDateErMsg = \"End Date is required field\"\r\n            return false;\r\n        }\r\n        else if (newSickDay.DateEnd.getTime() < newSickDay.DateBegin.getTime()) {\r\n            this.endDateErMsg = \"End Date should be more than Begin Date\"\r\n            return false;\r\n        }\r\n        else if (newSickDay.CountDays < 1) {\r\n            this.cntDayErMsg = \"Count should more than 1\";\r\n            return false;\r\n        }\r\n\r\n        this.beginDateErMsg = null;\r\n        this.endDateErMsg = null;\r\n        return true;\r\n    }\r\n\r\n\r\n    public goBack() {\r\n        this.location.back();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/sickdays/sickdays-edit/sickdays-edit.component.ts","module.exports = \"td, th {\\r\\n    border-top: 0px !important;\\r\\n    border-bottom: 0px !important;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/sickdays/sickdays-list/sickdays-list.component.css\n// module id = ./ClientApp/app/components/work-activity/sickdays/sickdays-list/sickdays-list.component.css\n// module chunks = common","module.exports = \"<user-sickdays>\\r\\n    \\r\\n</user-sickdays>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/sickdays/sickdays-list/sickdays-list.component.html\n// module id = ./ClientApp/app/components/work-activity/sickdays/sickdays-list/sickdays-list.component.html\n// module chunks = common","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\n\r\nimport { SickDay } from '../../../../models/sick-day.model';\r\nimport { User } from '../../../../models/user.model';\r\nimport { SickDayService } from '../../../../services/sick-day.service';\r\nimport { UsersService } from '../../../../services/users.service';\r\nimport { SickDayQueryModel } from '../../../../models/query-models/sick-day-query.model';\r\nimport { UserQueryModel } from '../../../../models/query-models/user-query.model';\r\n\r\n\r\n@Component({\r\n    templateUrl: './sickdays-list.component.html',\r\n    styleUrls: ['./sickdays-list.component.css']\r\n    \r\n})\r\n\r\nexport class SickDaysListComponent {\r\n    sickDays: Array<SickDay> = new Array<SickDay>();\r\n    newSickDays: SickDay = new SickDay();\r\n    users: Array<User> = new Array<User>();\r\n    status: string;\r\n    isAddVisible: boolean;\r\n    selectedUser = new User();\r\n\r\n    constructor(\r\n        private sickDayService: SickDayService,\r\n        private userStorageService: UserStorageService,\r\n        private usersService: UsersService,\r\n        private location: Location,\r\n\r\n    ) {\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/sickdays/sickdays-list/sickdays-list.component.ts","module.exports = \"   .my-table-striped > tbody > tr:nth-of-type(odd) {\\r\\n    background-color: #f9f9f9 !important;\\r\\n  }\\r\\n\\r\\n  .link:hover {\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  input:-moz-read-only {\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n  input:read-only {\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n    cursor: pointer;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/sickdays/sickdays-user-list/sickdays-user-list.component.css\n// module id = ./ClientApp/app/components/work-activity/sickdays/sickdays-user-list/sickdays-user-list.component.css\n// module chunks = common","module.exports = \"<div class=\\\"card x_panel\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h2>Sick Days</h2>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 text-right toggle-div\\\" *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\">\\r\\n                    <a href=\\\"javascript:;\\\" class=\\\"user-profile dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n                        <button class=\\\"btn btn-primary toggle-button\\\">\\r\\n                            <span class=\\\"fa fa-plus\\\"></span>\\r\\n                        </button>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu dropdown-usermenu pull-right\\\">\\r\\n                        <li>\\r\\n                            <a (click)=\\\"menuAddNew()\\\" class=\\\"side-menu-link\\\">\\r\\n                                Add sick day(s)\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div id=\\\"datatable-responsive_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap no-footer\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <form [formGroup]=\\\"newSickDayForm\\\" (submit)=\\\"add(newSickDay)\\\">\\r\\n                        <table class=\\\"table my-table-striped table-bordered projects\\\" [formGroup]=\\\"newSickDayForm\\\" (submit)=\\\"add(newSickDay)\\\">\\r\\n                            <thead style=\\\"color: #73879C;\\\">\\r\\n                                <tr>\\r\\n                                    <th *ngIf=\\\"userId == null\\\">User</th>\\r\\n                                    <th style=\\\"width:19%\\\">Count</th>\\r\\n                                    <th>Begin Date</th>\\r\\n                                    <th>End Date</th>\\r\\n                                    <th>Comment</th>\\r\\n                                    <th *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\" style=\\\"width:12%\\\"></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngIf=\\\"isAddVisible\\\">\\r\\n                                    <td *ngIf=\\\"userId == null\\\">\\r\\n                                        <select class=\\\"select2_single form-control\\\" [(ngModel)]=\\\"newSickDay.UserProfileId\\\" formControlName=\\\"SelectedUser\\\" tabindex=\\\"-1\\\">\\r\\n                                            <option *ngFor=\\\"let selectUser of users; let i = index\\\" [value]=\\\"selectUser.UserProfileId\\\">\\r\\n                                                {{ selectUser.FirstName }} {{ selectUser.LastName }}\\r\\n                                            </option>\\r\\n                                        </select>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:19%\\\">\\r\\n                                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Count days\\\" formControlName=\\\"CountDays\\\" [(ngModel)]=\\\"newSickDay.CountDays\\\" style=\\\"width: inherit;\\\"\\r\\n                                            disabled>\\r\\n                                            <span class=\\\"fa fa-calculator form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                            <span class=\\\"tooltiptext\\\">\\r\\n                                                Count\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                                            <mat-datepicker #picker1></mat-datepicker>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess7\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Begin Date\\\" [min]=\\\"minSickDayDate\\\" [max]=\\\"maxSickDayDate\\\" formControlName=\\\"BeginDate\\\" [(ngModel)]=\\\"newSickDay.DateBegin\\\" (ngModelChange)=\\\"calcSickDayDays(newSickDay)\\\" (click)=\\\"picker1.open()\\\" readonly>\\r\\n                                            <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                                            <span class=\\\"tooltiptext\\\">\\r\\n                                                Start of work\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"error-message\\\" *ngIf=\\\"newSickDayForm.get('BeginDate').errors\\\">\\r\\n                                            <span class=\\\"error-message\\\" *ngIf=\\\"newSickDayForm.get('BeginDate').errors.required && submitAttempt\\\">\\r\\n                                                Start Date is required\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <span class=\\\"error-message\\\" *ngIf=\\\"isBeginDateIncorrect\\\">\\r\\n                                            Start Date should be more than today\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                                            <mat-datepicker #picker2></mat-datepicker>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess8\\\" [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [min]=\\\"minSickDayDate\\\" [max]=\\\"maxSickDayDate\\\" formControlName=\\\"EndDate\\\" [(ngModel)]=\\\"newSickDay.DateEnd\\\" (ngModelChange)=\\\"calcSickDayDays(newSickDay)\\\" (click)=\\\"picker2.open()\\\" readonly>\\r\\n                                            <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                                            <span class=\\\"tooltiptext\\\">\\r\\n                                                End of vacation\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"error-message\\\" *ngIf=\\\"newSickDayForm.get('EndDate').errors\\\">\\r\\n                                            <span class=\\\"error-message\\\" *ngIf=\\\"newSickDayForm.get('EndDate').errors.required && submitAttempt\\\">\\r\\n                                                End Date is required\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <span class=\\\"error-message\\\" *ngIf=\\\"isEndDateIncorrect\\\">\\r\\n                                            End Date should be more than Begin Date and than today\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n\\r\\n                                        <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Comment\\\" formControlName=\\\"Comment\\\" [(ngModel)]=\\\"newSickDay.Comment\\\">\\r\\n                                            <span class=\\\"fa fa-comment form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                            <span class=\\\"tooltiptext\\\">\\r\\n                                                Comment\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"text-align:right; width:12%\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary black-tooltip\\\">\\r\\n                                            <i class=\\\"fa fa-check\\\"></i>\\r\\n                                            <span class=\\\"tooltiptext\\\">Save</span>\\r\\n                                        </button>\\r\\n                                        <button class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"isAddVisible = false\\\">\\r\\n                                            <i class=\\\"fa fa-close\\\"></i>\\r\\n                                            <span class=\\\"tooltiptext\\\">Cancel</span>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <ngx-spinner [visible]=\\\"loading\\\" [config]=\\\"spinnerConfig\\\"></ngx-spinner>\\r\\n                                <tr *ngFor=\\\"let sickDay of sickDays; let i = index\\\">\\r\\n                                    <td *ngIf=\\\"userId == null\\\" class=\\\"link\\\" (click)=\\\"goToUser(sickDay)\\\">\\r\\n                                        <span>\\r\\n                                            {{sickDay.UserProfile.FirstName}} {{sickDay.UserProfile.LastName}}\\r\\n                                        </span>\\r\\n                                    </td>\\r\\n                                    <td><span>{{sickDay.CountDays}}</span></td>\\r\\n                                    <td><span>{{sickDay.DateBegin | date:'MM/dd/yyyy'}}</span></td>\\r\\n                                    <td><span>{{sickDay.DateEnd | date:'MM/dd/yyyy'}}</span></td>\\r\\n                                    <td class=\\\"ellipsis\\\">{{sickDay.Comment}}</td>\\r\\n                                    <td *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\" style=\\\"text-align:right\\\">\\r\\n                                        <a class=\\\"btn btn-primary black-tooltip\\\" routerLink=\\\"/workactivities/sickDays/{{sickDay.Id}}/edit\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                            <span class=\\\"tooltiptext\\\">Edit</span>\\r\\n                                        </a>\\r\\n                                        <a class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"confirmDeleteDialog(sickDay.Id, i)\\\">\\r\\n                                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                            <span class=\\\"tooltiptext\\\">Delete</span>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <table-buttons [subject]=\\\"subject\\\">\\r\\n\\r\\n                        </table-buttons>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/sickdays/sickdays-user-list/sickdays-user-list.component.html\n// module id = ./ClientApp/app/components/work-activity/sickdays/sickdays-user-list/sickdays-user-list.component.html\n// module chunks = common","﻿import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\n\r\nimport { SickDay } from '../../../../models/sick-day.model';\r\nimport { SickDayService } from '../../../../services/sick-day.service';\r\nimport { SickDayQueryModel } from '../../../../models/query-models/sick-day-query.model';\r\nimport { UsersService } from '../../../../services/users.service';\r\nimport { UserQueryModel } from '../../../../models/query-models/user-query.model';\r\nimport { User } from '../../../../models/user.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { SPINNER_ANIMATIONS, SPINNER_PLACEMENT, ISpinnerConfig } from '@hardpool/ngx-spinner';\r\nimport { DeleteConfirmationComponent } from '../../../modals/delete-confirmation/delete-confirmation.component';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'user-sickdays',\r\n    templateUrl: './sickdays-user-list.component.html',\r\n    styleUrls: ['./sickdays-user-list.component.css']\r\n})\r\n\r\nexport class SickDaysUserListComponent implements OnInit {\r\n    sickDays: Array<SickDay> = new Array<SickDay>();\r\n    newSickDay: SickDay = new SickDay();\r\n    users: Array<User> = new Array<User>();\r\n    id: number;\r\n    status: string;\r\n    isAdmin: boolean;\r\n    isUser: boolean;\r\n    isMyPage: boolean;\r\n    isAddVisible: boolean;\r\n    selectedUser = new User();\r\n    isBeginDateIncorrect = false;\r\n    isEndDateIncorrect = false;\r\n    newSickDayForm: FormGroup;\r\n    minSickDayDate: Date;\r\n    maxSickDayDate: Date;\r\n    submitAttempt: boolean;\r\n    loading = false;\r\n    queryModel: SickDayQueryModel;\r\n    subject: Subject<any>;\r\n    subscription: Subscription;\r\n\r\n    @Input('userId') userId: number;\r\n\r\n    spinnerConfig: ISpinnerConfig = {\r\n            placement: SPINNER_PLACEMENT.block_ui,\r\n            animation: SPINNER_ANIMATIONS.spin_3,\r\n            size: \"3rem\",\r\n            color: \"#1574b3\"\r\n        };\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private userStorageService: UserStorageService,\r\n        private sickDayService: SickDayService,\r\n        private usersService: UsersService,\r\n        private fBuilder: FormBuilder,\r\n        private dialog: MatDialog,\r\n        private location: Location,\r\n        private router: Router\r\n    ) {\r\n        \r\n    };\r\n    \r\n    ngOnInit( ){       \r\n        this.subject = new Subject<any>();\r\n        this.isAddVisible = false;\r\n        this.id = this.userId;\r\n        this.queryModel = new SickDayQueryModel();\r\n        this.queryModel.Take =  10;\r\n        if (this.id != null) this.queryModel.UserId = this.id;\r\n        this.loading = true;\r\n            this.sickDayService.get(this.queryModel).subscribe(response => {\r\n                this.sickDays = response.Result;\r\n                this.subject.next({from: \"component\", response: response});\r\n                this.sickDays.forEach((value, index, array) => {\r\n                    value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                    value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                });\r\n                this.sickDays.sort((x, y) => {\r\n                    if (x.DateBegin > y.DateBegin)\r\n                        return -1;\r\n                    if (x.DateBegin < y.DateBegin)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                this.loading = false;\r\n            });\r\n            this.usersService.get(new UserQueryModel()).subscribe(response => {\r\n            this.users = response.Result;\r\n            }); \r\n\r\n\r\n\r\n            this.subscription = this.subject.asObservable().subscribe(response => {\r\n                if (response.fron == \"tablebuttons\") {\r\n                    this.queryModel = response.response as SickDayQueryModel;\r\n                    this.id = this.userId;\r\n                    if (this.id != null) this.queryModel.UserId = this.id;\r\n                    this.loading = true;\r\n                    this.sickDayService.get(this.queryModel).subscribe(response => {\r\n                        this.sickDays = response.Result;\r\n                        this.sickDays.forEach((value, index, array) => {\r\n                            value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                            value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                        });\r\n                        this.sickDays.sort((x, y) => {\r\n                            if (x.DateBegin > y.DateBegin)\r\n                                return -1;\r\n                            if (x.DateBegin < y.DateBegin)\r\n                                return 1;\r\n                            return 0;\r\n                        });\r\n                        this.loading = false;\r\n                    });\r\n                    this.usersService.get(new UserQueryModel()).subscribe(response => {\r\n                    this.users = response.Result;\r\n                    }); \r\n                }\r\n    \r\n            });\r\n\r\n        this.isMyPage = (this.id == this.userStorageService.getId() || this.isAdmin);\r\n        this.initDates();\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        this.newSickDayForm = this.fBuilder.group({\r\n            CountDays: ['', Validators.min(1)],\r\n            BeginDate: ['', [\r\n                Validators.required\r\n            ]],\r\n            EndDate: ['', [\r\n                Validators.required \r\n            ]],\r\n            Comment: [],\r\n            SelectedUser:[]\r\n        });\r\n    }\r\n\r\n    initDates() {\r\n        //Allow begin date vacation and end date vacation\r\n        //only in previous or in the next year\r\n        this.minSickDayDate = new Date(new Date().getFullYear(), 0, 1);//Start of the year\r\n        this.minSickDayDate.setFullYear(this.minSickDayDate.getFullYear() - 1);\r\n        this.maxSickDayDate = new Date(new Date().getFullYear(), 11, 31);//End of the year\r\n        this.maxSickDayDate.setFullYear(this.maxSickDayDate.getFullYear() + 1);\r\n    }\r\n\r\n    delete(index: number, indexOnArray: number) {\r\n        this.sickDayService.delete(index).subscribe((result) => {\r\n            this.queryModel.Take =  10;\r\n            if (this.id != null) this.queryModel.UserId = this.id;\r\n            this.loading = true;\r\n            this.sickDayService.get(this.queryModel).subscribe(response => {\r\n                this.sickDays = response.Result;\r\n                this.subject.next({from: \"component\", response: response});\r\n                this.sickDays.forEach((value, index, array) => {\r\n                    value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                    value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                });\r\n                this.sickDays.sort((x, y) => {\r\n                    if (x.DateBegin > y.DateBegin)\r\n                        return -1;\r\n                    if (x.DateBegin < y.DateBegin)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                this.loading = false;\r\n            });\r\n            this.usersService.get(new UserQueryModel()).subscribe(response => {\r\n            this.users = response.Result;\r\n            }); \r\n            this.status = \"Deleted\";\r\n        })\r\n    }\r\n\r\n    public confirmDeleteDialog(id, index) {\r\n\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.position = { top: '0' };\r\n        dialogConfig.autoFocus = false;\r\n\r\n        this.dialog.open(DeleteConfirmationComponent, dialogConfig)\r\n            .afterClosed().subscribe(dialogResult => {\r\n                if (dialogResult)\r\n                    this.delete(id, index);\r\n            });\r\n    }\r\n\r\n    public add(newSickDay: SickDay) {\r\n        if (this.newSickDayForm.valid && !this.isBeginDateIncorrect && !this.isEndDateIncorrect) {\r\n            this.submitAttempt = false;\r\n        newSickDay.DateBegin = new Date(Date.parse(newSickDay.DateBegin.toString()));\r\n        newSickDay.DateBegin.setMinutes(newSickDay.DateBegin.getMinutes() - newSickDay.DateBegin.getTimezoneOffset());\r\n        newSickDay.DateEnd = new Date(Date.parse(newSickDay.DateEnd.toString()));\r\n        newSickDay.DateEnd.setMinutes(newSickDay.DateEnd.getMinutes() - newSickDay.DateEnd.getTimezoneOffset());\r\n        newSickDay.UserProfileId = (this.id != null && this.id != 0 && this.id != undefined) ? this.id : newSickDay.UserProfileId;\r\n        this.sickDayService.create(newSickDay).subscribe((response) => {\r\n            this.newSickDay = response;\r\n            if (this.newSickDay.Id != 0) {\r\n                this.queryModel = new SickDayQueryModel();\r\n                this.queryModel.UserId = this.id;\r\n                this.sickDayService.get(this.queryModel).subscribe(response => {\r\n                    this.sickDays = response.Result;\r\n                    this.subject.next({from: \"component\", response: response});\r\n                    this.sickDays.forEach((value, index, array) => {\r\n                        value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                        value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                    });\r\n                });\r\n                this.isAddVisible = false;\r\n            }\r\n        });\r\n        }\r\n        else {\r\n            this.submitAttempt = true;\r\n        }\r\n    }\r\n\r\n    public calcSickDayDays(newSickDay: any) {\r\n        let currentDate = new Date();\r\n        currentDate.setHours(0);\r\n        currentDate.setMinutes(0);\r\n        currentDate.setSeconds(0);\r\n        this.isBeginDateIncorrect = false;\r\n        this.isEndDateIncorrect = false;\r\n        if (newSickDay.DateBegin && newSickDay.DateEnd) {\r\n            if (newSickDay.DateEnd.getTime() < newSickDay.DateBegin.getTime()) {\r\n                this.isEndDateIncorrect = true;\r\n            }\r\n            else {\r\n                this.newSickDay.CountDays = ((newSickDay.DateEnd.getTime() - newSickDay.DateBegin.getTime()) / 86400000) + 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    public menuAddNew() {\r\n        this.isAddVisible = true;\r\n        this.newSickDay = new SickDay();\r\n    }\r\n\r\n    public goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n    public goToUser(sickday: SickDay){\r\n        this.router.navigateByUrl('/users/'+sickday.UserProfileId+'/info')\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/sickdays/sickdays-user-list/sickdays-user-list.component.ts","module.exports = \"  .my-table-striped > tbody > tr:nth-of-type(odd) {\\r\\n    background-color: #f9f9f9 !important;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/sizevacations/sizevacations-list.component.css\n// module id = ./ClientApp/app/components/work-activity/sizevacations/sizevacations-list.component.css\n// module chunks = common","module.exports = \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h2>{{ 'Size of vacation' }}</h2>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-8 text-right\\\" *permission=\\\"['Super_Admin', 'Admin']\\\">\\r\\n                    <a href=\\\"javascript:;\\\" class=\\\"user-profile dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n                        <button class=\\\"btn btn-primary toggle-button\\\">\\r\\n                            <span class=\\\"fa fa-plus\\\"></span>\\r\\n                        </button>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu dropdown-usermenu pull-right\\\">\\r\\n                        <li>\\r\\n                            <a (click)=\\\"menuAddNew()\\\" class=\\\"side-menu-link\\\">\\r\\n                                Add New\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div id=\\\"datatable-responsive_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap no-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"table my-table-striped table-bordered projects\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Year</th>\\r\\n                            <th>Count of day</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngIf=\\\"isAddVisible\\\">\\r\\n                            <td>\\r\\n                                <mat-form-field>\\r\\n                                    <input matInput placeholder=\\\"Year\\\" name=\\\"Year\\\" [(ngModel)]=\\\"newSizeVacation.Year\\\" type=\\\"number\\\">\\r\\n                                </mat-form-field>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <mat-form-field>\\r\\n                                    <input matInput placeholder=\\\"Count days\\\" name=\\\"CountDays\\\" [(ngModel)]=\\\"newSizeVacation.CountDays\\\" type=\\\"number\\\">\\r\\n                                </mat-form-field>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-success alignCenterBtn \\\" (click)=\\\"add(newSizeVacation)\\\">Save</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <ngx-spinner [visible]=\\\"loading\\\" [config]=\\\"spinnerConfig\\\"></ngx-spinner>\\r\\n                        <tr *ngFor=\\\"let sizev of sizevacations; let i = index\\\">\\r\\n                            <td><span>{{sizev.Year}}</span></td>\\r\\n                            <td><span>{{sizev.CountDays}}</span></td>\\r\\n                            <td *permission=\\\"['Super_Admin', 'Admin']\\\">\\r\\n                                <a class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"delete(sizev.Id, i)\\\">\\r\\n                                    <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                                    <span class=\\\"tooltiptext\\\">Delete</span>\\r\\n                                </a>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/sizevacations/sizevacations-list.component.html\n// module id = ./ClientApp/app/components/work-activity/sizevacations/sizevacations-list.component.html\n// module chunks = common","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { UserStorageService } from '../../../services/user-storage.service';\r\nimport { SizeVacation } from '../../../models/size-vacation.model';\r\nimport { SizeVacationsService } from '../../../services/size-vacations.service';\r\nimport { SizeVacationQueryModel } from '../../../models/query-models/size-vacation-query.model';\r\nimport { SPINNER_ANIMATIONS, SPINNER_PLACEMENT, ISpinnerConfig } from '@hardpool/ngx-spinner';\r\n\r\n@Component({\r\n    templateUrl: './sizevacations-list.component.html',\r\n    styleUrls: ['./sizevacations-list.component.css']\r\n})\r\n\r\nexport class SizeVacationsListComponent implements OnInit {\r\n    sizevacations: Array<SizeVacation> = new Array<SizeVacation>();\r\n    newSizeVacation: SizeVacation = new SizeVacation();\r\n    status: string;\r\n    isAdmin: boolean;\r\n    isUser: boolean;\r\n    isAddVisible: boolean;\r\n    loading = false;\r\n\r\n    spinnerConfig: ISpinnerConfig;\r\n\r\n    constructor(\r\n        private sizeVacationService: SizeVacationsService,\r\n        private userStorageService: UserStorageService,\r\n        private location: Location\r\n    ) {\r\n    };\r\n\r\n    public delete(index: number, indexOnArray: number) {\r\n        this.sizeVacationService.delete(index).subscribe((result) => {\r\n            this.sizevacations.splice(indexOnArray, 1);\r\n            this.status = \"Deleted\";\r\n        })\r\n    }\r\n\r\n    public add(newSizeVacation: SizeVacation) {\r\n        if (newSizeVacation.Year < 2050 && newSizeVacation.Year > 2000 && newSizeVacation.CountDays < 365 && newSizeVacation.CountDays > -1) {\r\n            this.sizeVacationService.create(newSizeVacation).subscribe((result) => {\r\n                this.newSizeVacation = result;\r\n                if (this.newSizeVacation.Id != 0) {\r\n                    this.sizeVacationService.get(new SizeVacationQueryModel()).subscribe((response) => {\r\n                        this.sizevacations = response.Result;\r\n                        this.sizevacations.sort(x => x.Year).reverse();\r\n                    });\r\n                    this.isAddVisible = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public menuAddNew() {\r\n        this.isAddVisible = true;\r\n        this.newSizeVacation = new SizeVacation();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.spinnerConfig = {\r\n            placement: SPINNER_PLACEMENT.block_ui,\r\n            animation: SPINNER_ANIMATIONS.spin_3,\r\n            size: \"3rem\",\r\n            color: \"#1574b3\"\r\n        };\r\n        this.loading = true;\r\n        this.isAdmin = this.userStorageService.hasRole('Admin');\r\n        this.isUser = this.userStorageService.hasRole('User');\r\n        this.sizeVacationService.get(new SizeVacationQueryModel()).subscribe((response) => {\r\n            this.sizevacations = response.Result;\r\n            this.sizevacations.sort((x, y) => {\r\n                if (x.Year > y.Year)\r\n                    return -1;\r\n                if (x.Year < y.Year)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            this.loading = false;\r\n        })\r\n    }\r\n\r\n    public goBack() {\r\n        this.location.back();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/sizevacations/sizevacations-list.component.ts","module.exports = \"<div class=\\\"card x_panel\\\">\\r\\n    <div id=\\\"divDataBody\\\" class=\\\"container entity\\\">\\r\\n        <div class=\\\"row formTitle\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h2 class=\\\"title\\\">Update vacation</h2>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <form name=\\\"addpost\\\" class=\\\"form-horizontal  container-fluid\\\">\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                        <mat-datepicker #picker1></mat-datepicker>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess6\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Start Date\\\" name=\\\"BeginDate\\\" [(ngModel)]=\\\"vacation.DateBegin\\\">\\r\\n                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            Start Date\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                        <mat-datepicker #picker2></mat-datepicker>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess6\\\" [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" name=\\\"EndDate\\\" [(ngModel)]=\\\"vacation.DateEnd\\\">\\r\\n                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            End Date\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Comment\\\" name=\\\"Comment\\\" [(ngModel)]=\\\"vacation.Comment\\\">\\r\\n                        <span class=\\\"fa fa-comment form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            Comment\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control  has-feedback-left\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Count days\\\" name=\\\"CountDays\\\" [(ngModel)]=\\\"vacation.CountDays\\\">\\r\\n                        <span class=\\\"fa fa-calculator form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        <span class=\\\"error-message\\\" *ngIf=\\\"cntDayErMsg\\\">\\r\\n                            {{cntDayErMsg}}\\r\\n                        </span>\\r\\n                        <span class=\\\"tooltiptext\\\">\\r\\n                            CountDays\\r\\n                        </span>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback\\\">\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-8 col-md-offset-2 col-xs-12 \\\">\\r\\n                        <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                            <div class=\\\"form-group col-md-12 col-xs-12  text-center\\\">\\r\\n                                <button class=\\\"btn btn-primary alignCenterBtn\\\" (click)=\\\"updateVacation(vacation)\\\">Save</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/vacations/vacations-edit/vacations-edit.component.html\n// module id = ./ClientApp/app/components/work-activity/vacations/vacations-edit/vacations-edit.component.html\n// module chunks = common","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\nimport { VacationService } from '../../../../services/vacation.service';\r\nimport { Vacation } from '../../../../models/vacation.model';\r\n\r\n@Component({\r\n    templateUrl: './vacations-edit.component.html'\r\n})\r\n\r\nexport class VacationsEditComponent implements OnInit {\r\n    vacation: Vacation = new Vacation();\r\n    private id: number;\r\n    beginDateErMsg: string;\r\n    endDateErMsg: string;\r\n    cntDayErMsg: string;\r\n\r\n    constructor(\r\n        private vacationService: VacationService,\r\n        private location: Location,\r\n        private route: ActivatedRoute,\r\n        private userStorageService: UserStorageService,\r\n\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.id = +params['id'];\r\n            this.vacationService.getById(this.id).subscribe(responce => {\r\n                this.vacation = responce;\r\n                this.vacation.DateBegin = new Date(Date.parse(this.vacation.DateBegin.toString()));\r\n                this.vacation.DateEnd = new Date(Date.parse(this.vacation.DateEnd.toString()));\r\n            });\r\n        });\r\n    }\r\n\r\n    public updateVacation(vacation: any) {\r\n        if (this.isVacationsFormValid(vacation)) {\r\n            this.vacation.DateBegin = new Date(Date.parse(this.vacation.DateBegin.toString()));\r\n            this.vacation.DateBegin.setMinutes(this.vacation.DateBegin.getMinutes() - this.vacation.DateBegin.getTimezoneOffset());\r\n            this.vacation.DateEnd = new Date(Date.parse(this.vacation.DateEnd.toString()));\r\n            this.vacation.DateEnd.setMinutes(this.vacation.DateEnd.getMinutes() - this.vacation.DateEnd.getTimezoneOffset());\r\n            this.vacationService.update(this.vacation).subscribe(response => {\r\n                this.location.back();\r\n            });\r\n        }\r\n    };\r\n\r\n    public calcVacationDays(vacation: any) {\r\n        if (vacation.DateBegin && vacation.DateEnd) {\r\n            if (vacation.DateEnd.getTime() <= vacation.DateBegin.getTime()) {\r\n                this.endDateErMsg = \"End Date should be more than Begin Date\"\r\n            }\r\n            else {\r\n                this.vacation.CountDays = ((vacation.DateEnd.getTime() - vacation.DateBegin.getTime()) / 86400000) + 1;\r\n                this.endDateErMsg = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isVacationsFormValid(newVacation: Vacation): boolean {\r\n        if (newVacation.DateBegin == null) {\r\n            this.beginDateErMsg = \"Begin Date is required field\"\r\n            return false;\r\n        }\r\n        else if (newVacation.DateEnd == null) {\r\n            this.endDateErMsg = \"End Date is required field\"\r\n            return false;\r\n        }\r\n        else if (newVacation.DateEnd.getTime() < newVacation.DateBegin.getTime()) {\r\n            this.endDateErMsg = \"End Date should be more than Begin Date\"\r\n            return false;\r\n        }\r\n        else if (newVacation.CountDays < 1) {\r\n            this.cntDayErMsg = \"Count should more than 1\";\r\n            return false;\r\n        }\r\n\r\n        this.beginDateErMsg = null;\r\n        this.endDateErMsg = null;\r\n        return true;\r\n    }\r\n\r\n    public goBack() {\r\n        this.location.back();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/vacations/vacations-edit/vacations-edit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/vacations/vacations-list/vacations-list.component.css\n// module id = ./ClientApp/app/components/work-activity/vacations/vacations-list/vacations-list.component.css\n// module chunks = common","module.exports = \"<user-vacations>\\r\\n    \\r\\n</user-vacations>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/vacations/vacations-list/vacations-list.component.html\n// module id = ./ClientApp/app/components/work-activity/vacations/vacations-list/vacations-list.component.html\n// module chunks = common","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\n\r\nimport { Vacation } from '../../../../models/vacation.model';\r\nimport { User } from '../../../../models/user.model';\r\nimport { VacationService } from '../../../../services/vacation.service';\r\nimport { UsersService } from '../../../../services/users.service';\r\nimport { VacationQueryModel } from '../../../../models/query-models/vacation.query.model';\r\nimport { UserQueryModel } from '../../../../models/query-models/user-query.model';\r\n\r\n\r\n@Component({\r\n    templateUrl: './vacations-list.component.html',\r\n    styleUrls: ['./vacations-list.component.css']\r\n})\r\n\r\nexport class VacationsListComponent {\r\n    vacations: Array<Vacation> = new Array<Vacation>();\r\n    newVacation: Vacation = new Vacation();\r\n    users: Array<User> = new Array<User>();\r\n    status: string;\r\n    isAdmin: boolean;\r\n    isUser: boolean;\r\n    isAddVisible: boolean;\r\n    selectedUser = new User();\r\n\r\n    constructor(\r\n        private vacationService: VacationService,\r\n        private userStorageService: UserStorageService,\r\n        private usersService: UsersService,\r\n        private location: Location,\r\n\r\n    ) {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/vacations/vacations-list/vacations-list.component.ts","module.exports = \"   .my-table-striped > tbody > tr:nth-of-type(odd) {\\r\\n    background-color: #f9f9f9 !important;\\r\\n  }\\r\\n\\r\\n  .link:hover {\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  input:-moz-read-only {\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n  input:read-only {\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n    cursor: pointer;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/vacations/vacations-user-list/vacations-user-list.component.css\n// module id = ./ClientApp/app/components/work-activity/vacations/vacations-user-list/vacations-user-list.component.css\n// module chunks = common","module.exports = \"<div class=\\\"card x_panel\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h2>Vacations</h2>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 text-right toggle-div\\\" *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\">\\r\\n                    <a href=\\\"javascript:;\\\" class=\\\"user-profile dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n                        <button class=\\\"btn btn-primary toggle-button\\\">\\r\\n                            <span class=\\\"fa fa-plus\\\"></span>\\r\\n                        </button>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu dropdown-usermenu pull-right\\\">\\r\\n                        <li>\\r\\n                            <a (click)=\\\"menuAddNew()\\\" class=\\\"side-menu-link\\\">\\r\\n                                Add vacation day(s)\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div id=\\\"datatable-responsive_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap no-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form [formGroup]=\\\"newVacationForm\\\" (submit)=\\\"add(newVacation)\\\">\\r\\n                    <table class=\\\"table my-table-striped table-bordered projects\\\" [formGroup]=\\\"newVacationForm\\\" (submit)=\\\"add(newVacation)\\\">\\r\\n                        <thead style=\\\"color: #73879C;\\\">\\r\\n                            <tr>\\r\\n                                <th *ngIf=\\\"userId == null\\\">User</th>\\r\\n                                <th>Count</th>\\r\\n                                <th>Begin Date</th>\\r\\n                                <th>End Date</th>\\r\\n                                <th>Comment</th>\\r\\n                                <th>Status</th>\\r\\n                                <th style=\\\"width:19%\\\" *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\"></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngIf=\\\"isAddVisible\\\">\\r\\n                                <td *ngIf=\\\"userId == null\\\">\\r\\n                                    <select class=\\\"select2_single form-control\\\" [(ngModel)]=\\\"newVacation.UserProfileId\\\" formControlName=\\\"SelectedUser\\\" tabindex=\\\"-1\\\">\\r\\n                                        <option *ngFor=\\\"let selectUser of users; let i = index\\\" [value]=\\\"selectUser.UserProfileId\\\">\\r\\n                                            {{ selectUser.FirstName }} {{ selectUser.LastName }}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Count\\\" formControlName=\\\"CountDays\\\" [(ngModel)]=\\\"newVacation.CountDays\\\" style=\\\"width: inherit;\\\" disabled>\\r\\n                                        <span class=\\\"fa fa-calculator form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        <span class=\\\"tooltiptext\\\">\\r\\n                                            Count\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                                        <mat-datepicker #picker1></mat-datepicker>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess7\\\" [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Begin Date\\\" [min]=\\\"minVacationDate\\\" [max]=\\\"maxVacationDate\\\" formControlName=\\\"BeginDate\\\" [(ngModel)]=\\\"newVacation.DateBegin\\\" (ngModelChange)=\\\"calcVacationDays(newVacation)\\\" (click)=\\\"picker1.open()\\\" readonly>\\r\\n                                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                                        <span class=\\\"tooltiptext\\\">\\r\\n                                            Start of vacation\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"error-message\\\" *ngIf=\\\"newVacationForm.get('BeginDate').errors\\\">\\r\\n                                        <span class=\\\"error-message\\\" *ngIf=\\\"newVacationForm.get('BeginDate').errors.required && submitAttempt\\\">\\r\\n                                            Start Date is required\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <span class=\\\"error-message\\\" *ngIf=\\\"isBeginDateIncorrect\\\">\\r\\n                                        Start Date should be more than today\\r\\n                                    </span>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback black-tooltip date-field\\\">\\r\\n                                        <mat-datepicker #picker2></mat-datepicker>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess8\\\" [matDatepicker]=\\\"picker2\\\" placeholder=\\\"End Date\\\" [min]=\\\"minVacationDate\\\" [max]=\\\"maxVacationDate\\\" formControlName=\\\"EndDate\\\" [(ngModel)]=\\\"newVacation.DateEnd\\\" (ngModelChange)=\\\"calcVacationDays(newVacation)\\\" (click)=\\\"picker2.open()\\\" readonly>\\r\\n                                        <mat-datepicker-toggle class=\\\"left\\\" matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                                        <span class=\\\"tooltiptext\\\">\\r\\n                                            End of vacation\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"error-message\\\" *ngIf=\\\"newVacationForm.get('EndDate').errors\\\">\\r\\n                                        <span class=\\\"error-message\\\" *ngIf=\\\"newVacationForm.get('EndDate').errors.required && submitAttempt\\\">\\r\\n                                            End Date is required\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <span class=\\\"error-message\\\" *ngIf=\\\"isEndDateIncorrect\\\">\\r\\n                                        End Date should be more than Begin Date and than today\\r\\n                                    </span>\\r\\n                                </td>\\r\\n                                <td>\\r\\n\\r\\n                                    <div class=\\\"col-md-12 col-sm-12 col-xs-12 form-group has-feedback  black-tooltip\\\">\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control has-feedback-left form-control-small\\\" id=\\\"inputSuccess12\\\" placeholder=\\\"Comment\\\" formControlName=\\\"Comment\\\" [(ngModel)]=\\\"newVacation.Comment\\\">\\r\\n                                        <span class=\\\"fa fa-comment form-control-feedback left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        <span class=\\\"tooltiptext\\\">\\r\\n                                            Comment\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n\\r\\n\\r\\n                                </td>\\r\\n                                <td></td>\\r\\n                                <td  style=\\\"width:19%\\\" style=\\\"text-align:right;\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-primary black-tooltip\\\">\\r\\n                                        <i class=\\\"fa fa-check\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Save</span>\\r\\n                                    </button>\\r\\n                                    <button class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"isAddVisible = false\\\">\\r\\n                                        <i class=\\\"fa fa-close\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Cancel</span>\\r\\n                                    </button>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <ngx-spinner [visible]=\\\"loading\\\" [config]=\\\"spinnerConfig\\\"></ngx-spinner>\\r\\n                            <tr *ngFor=\\\"let vacation of vacations; let i = index\\\">\\r\\n                                <td *ngIf=\\\"userId == null\\\" class=\\\"link\\\" (click)=\\\"goToUser(vacation)\\\" ><span>{{vacation.UserProfile.FirstName}} {{vacation.UserProfile.LastName}}</span></td>\\r\\n                                <td><span>{{vacation.CountDays}}</span></td>\\r\\n                                <td><span>{{vacation.DateBegin.toDateString() }}</span></td>\\r\\n                                <td><span>{{vacation.DateEnd.toDateString() }}</span></td>\\r\\n                                <td class=\\\"ellipsis\\\">{{vacation.Comment}}</td>\\r\\n                                <td>{{vacation.Status}}</td>\\r\\n                                <td style=\\\"width:19%\\\" *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\" style=\\\"text-align:right\\\">\\r\\n                                    <a class=\\\"btn btn-primary black-tooltip\\\" (click)=\\\"confirmVacation(vacation)\\\" *ngIf=\\\"vacation.Status == 'IsWaiting' && isAdmin\\\">\\r\\n                                        <i class=\\\"fa fa-check\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Confirm</span>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"rejectVacation(vacation)\\\" *ngIf=\\\"vacation.Status == 'IsWaiting' && isAdmin\\\">\\r\\n                                        <i class=\\\"fa fa-close\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Reject</span>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-primary black-tooltip\\\" routerLink=\\\"/workactivities/vacations/{{vacation.Id}}/edit\\\">\\r\\n                                        <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Edit</span>\\r\\n                                    </a>\\r\\n                                    <a class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"confirmDeleteDialog(vacation.Id, i)\\\">\\r\\n                                        <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                        <span class=\\\"tooltiptext\\\">Delete</span>\\r\\n                                    </a>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </form>\\r\\n                <table-buttons [subject]=\\\"subject\\\">\\r\\n\\r\\n                </table-buttons>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/vacations/vacations-user-list/vacations-user-list.component.html\n// module id = ./ClientApp/app/components/work-activity/vacations/vacations-user-list/vacations-user-list.component.html\n// module chunks = common","﻿import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\nimport { Vacation } from '../../../../models/vacation.model';\r\nimport { VacationService } from '../../../../services/vacation.service';\r\nimport { UsersService } from '../../../../services/users.service';\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material\";\r\nimport { DeleteConfirmationComponent } from '../../../modals/delete-confirmation/delete-confirmation.component'\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { VacationQueryModel } from '../../../../models/query-models/vacation.query.model';\r\nimport { User } from '../../../../models/user.model';\r\nimport { UserQueryModel } from '../../../../models/query-models/user-query.model';\r\nimport { SPINNER_ANIMATIONS, SPINNER_PLACEMENT, ISpinnerConfig } from '@hardpool/ngx-spinner';\r\nimport { Location } from '@angular/common';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'user-vacations',\r\n    templateUrl: './vacations-user-list.component.html',\r\n    styleUrls: ['./vacations-user-list.component.css']\r\n})\r\n\r\nexport class VacationsUserListComponent implements OnInit {\r\n    vacations = new Array<Vacation>();\r\n    newVacation = new Vacation();\r\n    id: number;\r\n    status: string;\r\n    isAddVisible: boolean;\r\n    beginDateErMsg: string;\r\n    endDateErMsg: string;\r\n    vacationDaysExist: boolean;\r\n    newVacationForm: FormGroup;\r\n    minVacationDate: Date;\r\n    maxVacationDate: Date;\r\n    submitAttempt: boolean;\r\n    isBeginDateIncorrect = false;\r\n    isEndDateIncorrect = false;\r\n    selectedUser = new User();\r\n    users: Array<User> = new Array<User>();\r\n    loading = false;\r\n    queryModel: VacationQueryModel;\r\n    subject: Subject<any>;\r\n    subscription: Subscription;\r\n    isWaitingExist: boolean = false;\r\n    isAdmin: boolean;\r\n\r\n    spinnerConfig: ISpinnerConfig = {\r\n            placement: SPINNER_PLACEMENT.block_ui,\r\n            animation: SPINNER_ANIMATIONS.spin_3,\r\n            size: \"3rem\",\r\n            color: \"#1574b3\"\r\n        };\r\n\r\n    @Input('userId') userId: number;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private userStorageService: UserStorageService,\r\n        private vacationService: VacationService,\r\n        private dialog: MatDialog,\r\n        private usersService: UsersService,\r\n        private fBuilder: FormBuilder,\r\n        private location: Location,\r\n        private router: Router\r\n    ) {\r\n        this.isAddVisible = false;\r\n            \r\n    };\r\n    \r\n    ngOnInit () {\r\n        this.isAdmin = this.userStorageService.hasPermission([\"Admin\", \"Super_Admin\"]);\r\n        this.subject = new Subject<any>();\r\n        this.id = this.userId;\r\n        this.queryModel = new VacationQueryModel();\r\n        if (this.id != null) this.queryModel.UserId = this.id;\r\n        this.queryModel.Take = 10;\r\n        this.queryModel.Skip = 0;\r\n        this.loading = true;\r\n        this.vacationService.get(this.queryModel).subscribe(response => {\r\n            this.vacations = response.Result;\r\n            this.subject.next({from: \"component\", response: response});\r\n            this.vacations.forEach((value, index, array) => {\r\n                value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                value.CreatedDate = new Date(Date.parse(value.CreatedDate.toString()));\r\n                value.Status = value.CreatedDate.setTime(value.CreatedDate.getTime() + 48*60*60*1000) < Date.now() ? \"Confirmed\" : value.Status;\r\n                if (value.Status == \"IsWaiting\") this.isWaitingExist = true;\r\n            });\r\n\r\n            this.vacations.sort((x, y) => {\r\n                if (x.DateBegin > y.DateBegin)\r\n                    return -1;\r\n                if (x.DateBegin < y.DateBegin)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            this.loading = false;\r\n        });\r\n\r\n        this.subscription = this.subject.asObservable().subscribe(response => {\r\n            if (response.from == \"tablebuttons\") {\r\n                this.queryModel = response.response as VacationQueryModel;\r\n                if (this.id != null) this.queryModel.UserId = this.id;\r\n                this.loading = true;\r\n                this.vacationService.get(this.queryModel).subscribe(response => {\r\n                    this.vacations = response.Result;\r\n                    this.vacations.forEach((value, index, array) => {\r\n                        value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                        value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                        value.CreatedDate = new Date(Date.parse(value.CreatedDate.toString()));\r\n                        value.Status = value.CreatedDate.setTime(value.CreatedDate.getTime() + 48*60*60*1000) < Date.now() ? \"Confirmed\" : value.Status;\r\n                    });\r\n    \r\n                    this.vacations.sort((x, y) => {\r\n                        if (x.DateBegin > y.DateBegin)\r\n                            return -1;\r\n                        if (x.DateBegin < y.DateBegin)\r\n                            return 1;\r\n                        return 0;\r\n                    });\r\n                    this.loading = false;\r\n                });\r\n            }\r\n        });\r\n\r\n        this.usersService.get(new UserQueryModel()).subscribe(response => {\r\n            this.users = response.Result;\r\n        });\r\n        \r\n    this.initDates();\r\n    this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        this.newVacationForm = this.fBuilder.group({\r\n            CountDays: ['', Validators.min(1)],\r\n            BeginDate: ['', [\r\n                Validators.required\r\n            ]],\r\n            EndDate: ['', [\r\n                Validators.required\r\n            ]],\r\n            Comment: [],\r\n            SelectedUser:[]\r\n        });\r\n    }\r\n\r\n    initDates() {\r\n        //Allow begin date vacation and end date vacation\r\n        //only in previous or in the next year\r\n        this.minVacationDate = new Date(new Date().getFullYear(), 0, 1);//Start of the year\r\n        this.minVacationDate.setFullYear(this.minVacationDate.getFullYear() - 1);\r\n        this.maxVacationDate = new Date(new Date().getFullYear(), 11, 31);//End of the year\r\n        this.maxVacationDate.setFullYear(this.maxVacationDate.getFullYear() + 1);\r\n    }\r\n\r\n    private delete(id, index) {\r\n        this.vacationService.delete(id).subscribe((result) => {\r\n            this.usersService.updateVacDays(this.vacations[index].CountDays*(-1));\r\n            if (this.id != null) this.queryModel.UserId = this.id;\r\n            this.queryModel.Take = 10;\r\n            this.queryModel.Skip = 0;\r\n            this.loading = true;\r\n            this.vacationService.get(this.queryModel).subscribe(response => {\r\n                this.vacations = response.Result;\r\n                this.subject.next({from: \"component\", response: response});\r\n                this.vacations.forEach((value, index, array) => {\r\n                    value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                    value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                    value.CreatedDate = new Date(Date.parse(value.CreatedDate.toString()));\r\n                    value.Status = value.CreatedDate.setTime(value.CreatedDate.getTime() + 48*60*60*1000) < Date.now() ? \"Confirmed\" : value.Status;\r\n                    if (value.Status == \"IsWaiting\") this.isWaitingExist = true;\r\n                });\r\n    \r\n                this.vacations.sort((x, y) => {\r\n                    if (x.DateBegin > y.DateBegin)\r\n                        return -1;\r\n                    if (x.DateBegin < y.DateBegin)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                this.loading = false;\r\n            })\r\n            this.status = \"Deleted\";\r\n        })\r\n    }\r\n\r\n    confirmDeleteDialog(id, index) {\r\n\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.position = { top: '0' };\r\n        dialogConfig.autoFocus = false;\r\n\r\n        this.dialog.open(DeleteConfirmationComponent, dialogConfig)\r\n            .afterClosed().subscribe(dialogResult => {\r\n                if (dialogResult)\r\n                    this.delete(id, index);\r\n            });\r\n    }\r\n\r\n    public add(newVacation: Vacation) {\r\n        if (this.newVacationForm.valid && !this.isBeginDateIncorrect && !this.isEndDateIncorrect) {\r\n            this.submitAttempt = false;\r\n            newVacation.DateBegin = new Date(Date.parse(newVacation.DateBegin.toString()));\r\n            newVacation.DateBegin.setMinutes(newVacation.DateBegin.getMinutes() - newVacation.DateBegin.getTimezoneOffset());\r\n            newVacation.DateEnd = new Date(Date.parse(newVacation.DateEnd.toString()));\r\n            newVacation.DateEnd.setMinutes(newVacation.DateEnd.getMinutes() - newVacation.DateEnd.getTimezoneOffset());\r\n            newVacation.CreatedDate = new Date();\r\n            newVacation.CreatedDate.setMinutes(newVacation.CreatedDate.getMinutes() - newVacation.CreatedDate.getTimezoneOffset());\r\n            newVacation.UserProfileId = (this.id != null && this.id != 0  && this.id != undefined) ? this.id : newVacation.UserProfileId;\r\n            newVacation.Status = \"IsWaiting\";\r\n            this.vacationService.create(newVacation).subscribe((result) => {\r\n                this.newVacation = result;\r\n                if (this.newVacation.Id != 0) {\r\n                    this.usersService.updateVacDays(this.newVacation.CountDays);\r\n                    this.queryModel.UserId = this.id;\r\n                    this.vacationService.get(this.queryModel).subscribe(response => {\r\n                    this.vacations = response.Result;\r\n                    this.subject.next({from: \"component\", response: response});\r\n                        this.vacations.forEach((value, index, array) => {\r\n                            value.DateBegin = new Date(Date.parse(value.DateBegin.toString()));\r\n                            value.DateEnd = new Date(Date.parse(value.DateEnd.toString()));\r\n                            value.CreatedDate = new Date(Date.parse(value.CreatedDate.toString()));\r\n                            value.Status = value.CreatedDate.setTime(value.CreatedDate.getTime() + 48*60*60*1000) < Date.now() ? \"Confirmed\" : value.Status;\r\n                        });\r\n                    });\r\n                    this.isAddVisible = false;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.submitAttempt = true;\r\n        }\r\n    }\r\n\r\n   \r\n    public calcVacationDays(newVacation: any) {\r\n        let currentDate = new Date();\r\n        currentDate.setHours(0);\r\n        currentDate.setMinutes(0);\r\n        currentDate.setSeconds(0);\r\n        this.isBeginDateIncorrect = false;\r\n        this.isEndDateIncorrect = false;\r\n        if (newVacation.DateBegin && newVacation.DateEnd) {\r\n            if (newVacation.DateEnd.getTime() < newVacation.DateBegin.getTime()) {\r\n                this.isEndDateIncorrect = true;\r\n            }\r\n            else {\r\n                this.newVacation.CountDays = ((newVacation.DateEnd.getTime() - newVacation.DateBegin.getTime()) / 86400000) + 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    menuAddNew() {\r\n        this.isAddVisible = true;\r\n        this.newVacation = new Vacation();\r\n    }\r\n\r\n    goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n    public confirmVacation(vacation: Vacation) {\r\n        this.isWaitingExist = false;\r\n            vacation.DateBegin = new Date(Date.parse(vacation.DateBegin.toString()));\r\n            vacation.DateBegin.setMinutes(vacation.DateBegin.getMinutes() - vacation.DateBegin.getTimezoneOffset());\r\n            vacation.DateEnd = new Date(Date.parse(vacation.DateEnd.toString()));\r\n            vacation.DateEnd.setMinutes(vacation.DateEnd.getMinutes() - vacation.DateEnd.getTimezoneOffset());\r\n            vacation.Status = \"Confirmed\";\r\n            this.vacationService.update(vacation).subscribe(response => {\r\n                this.vacations.forEach((value, index, array) => {\r\n                    value.Status = value.CreatedDate.setTime(value.CreatedDate.getTime() + 48*60*60*1000) < Date.now() ? \"Confirmed\" : value.Status;\r\n                    if (value.Status == \"IsWaiting\") this.isWaitingExist = true;\r\n                });\r\n            });\r\n    }\r\n\r\n    public rejectVacation(vacation: Vacation) {\r\n        this.isWaitingExist = false;\r\n        vacation.DateBegin = new Date(Date.parse(vacation.DateBegin.toString()));\r\n        vacation.DateBegin.setMinutes(vacation.DateBegin.getMinutes() - vacation.DateBegin.getTimezoneOffset());\r\n        vacation.DateEnd = new Date(Date.parse(vacation.DateEnd.toString()));\r\n        vacation.DateEnd.setMinutes(vacation.DateEnd.getMinutes() - vacation.DateEnd.getTimezoneOffset());\r\n        vacation.Status = \"Rejected\";\r\n        this.vacationService.update(vacation).subscribe(response => {\r\n            this.vacations.forEach((value, index, array) => {\r\n                value.Status = value.CreatedDate.setTime(value.CreatedDate.getTime() + 48*60*60*1000) < Date.now() ? \"Confirmed\" : value.Status;\r\n                if (value.Status == \"IsWaiting\") this.isWaitingExist = true;\r\n            });\r\n        });\r\n    }\r\n\r\n    public goToUser(vacation: Vacation){\r\n        this.router.navigateByUrl('/users/'+vacation.UserProfileId+'/info')\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/vacations/vacations-user-list/vacations-user-list.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WorkActivitiesListComponent } from './workactivites/workactivities-list.component';\r\nimport { VacationsListComponent } from './vacations/vacations-list/vacations-list.component';\r\nimport { VacationsEditComponent } from './vacations/vacations-edit/vacations-edit.component';\r\nimport { SickDaysListComponent } from './sickdays/sickdays-list/sickdays-list.component';\r\nimport { SickDaysEditComponent } from './sickdays/sickdays-edit/sickdays-edit.component';\r\nimport { OvertimesListComponent } from './overtimes/overtimes-list/overtimes-list.component';\r\nimport { OvertimesEditComponent } from './overtimes/overtimes-edit/overtimes-edit.component';\r\nimport { SizeVacationsListComponent } from './sizevacations/sizevacations-list.component';\r\nimport { PermissionGuard } from '../../guards/permission.guard';\r\nimport { WorkAtHomeListComponent } from './work-at-home/work-at-home-list/work-at-home-list.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: WorkActivitiesListComponent, canActivate: [PermissionGuard], data: { roles: ['Super_Admin', 'Admin', 'HumanResource', 'ProjectManager', 'Developer'], forCurrentUser: true } },\r\n\r\n    {\r\n        path: 'vacations', children: [\r\n            { path: '', component: VacationsListComponent, canActivate: [PermissionGuard], data: { roles: ['Super_Admin', 'Admin', 'HumanResource', 'ProjectManager'], forCurrentUser: false } },\r\n            { path: ':id/edit', component: VacationsEditComponent, canActivate: [PermissionGuard], data: { roles: ['Super_Admin', 'Admin', 'HumanResource', 'Developer'], forCurrentUser: true } }\r\n        ]\r\n    },\r\n\r\n    {\r\n        path: 'sickDays', children: [\r\n            { path: '', component: SickDaysListComponent, canActivate: [PermissionGuard], data: { roles: ['Super_Admin', 'Admin', 'HumanResource', 'ProjectManager'], forCurrentUser: false } },\r\n            { path: ':id/edit', component: SickDaysEditComponent, canActivate: [PermissionGuard], data: { roles: ['Super_Admin', 'Admin', 'HumanResource', 'Developer'], forCurrentUser: true } }\r\n        ]\r\n    },\r\n\r\n    {\r\n        path: 'overtimes', children: [\r\n            { path: '', component: OvertimesListComponent, canActivate: [PermissionGuard], data: { roles: ['Super_Admin', 'Admin', 'HumanResource', 'ProjectManager'], forCurrentUser: false } },\r\n            { path: ':id/edit', component: OvertimesEditComponent, canActivate: [PermissionGuard], data: { roles: ['Super_Admin', 'Admin', 'HumanResource', 'Developer'], forCurrentUser: true } }\r\n        ]\r\n    },\r\n\r\n    {\r\n        path: 'sizeVacations', children: [\r\n            { path: '', component: SizeVacationsListComponent, canActivate: [PermissionGuard], data: { roles: ['Super_Admin', 'Admin', 'HumanResource', 'ProjectManager', 'Developer'], forCurrentUser: true } }\r\n        ]\r\n    },\r\n\r\n    {\r\n        path: 'workathome', children: [\r\n            { path: '', component: WorkAtHomeListComponent, canActivate: [PermissionGuard], data: { roles: ['Super_Admin', 'Admin', 'HumanResource', 'ProjectManager'], forCurrentUser: false } }\r\n        ]\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    providers: [],\r\n    exports: [RouterModule]\r\n})\r\nexport class WorkActivityRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/work-activity-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { SharedModule } from '../../modules/shared.module';\r\nimport  { WorkActivityRoutingModule } from './work-activity-routing.module';\r\nimport { WorkActivitiesListComponent } from './workactivites/workactivities-list.component';\r\nimport { VacationsListComponent } from './vacations/vacations-list/vacations-list.component';\r\nimport { VacationsEditComponent } from './vacations/vacations-edit/vacations-edit.component';\r\nimport { SickDaysListComponent } from './sickdays/sickdays-list/sickdays-list.component';\r\nimport { SickDaysEditComponent } from './sickdays/sickdays-edit/sickdays-edit.component';\r\nimport { OvertimesListComponent } from './overtimes/overtimes-list/overtimes-list.component';\r\nimport { OvertimesEditComponent } from './overtimes/overtimes-edit/overtimes-edit.component';\r\nimport { SizeVacationsListComponent } from './sizevacations/sizevacations-list.component';\r\nimport { OvertimeUserListComponent } from './overtimes/overtimes-user-list/overtimes-user-list.component';\r\nimport { SickDaysUserListComponent } from './sickdays/sickdays-user-list/sickdays-user-list.component';\r\nimport { VacationsUserListComponent } from './vacations/vacations-user-list/vacations-user-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { WorkAtHomeListComponent } from './work-at-home/work-at-home-list/work-at-home-list.component';\r\nimport { WorkAtHomeUserListComponent } from './work-at-home/work-at-home-user-list/work-at-home-user-list.component';\r\n\r\n@NgModule({\r\n    declarations: [WorkActivitiesListComponent,\r\n        VacationsListComponent,\r\n        VacationsEditComponent,\r\n        SickDaysListComponent,\r\n        SickDaysEditComponent,\r\n        OvertimesListComponent,\r\n        OvertimesEditComponent,\r\n        SizeVacationsListComponent,\r\n        OvertimeUserListComponent,\r\n        SickDaysUserListComponent,\r\n        VacationsUserListComponent,\r\n        WorkAtHomeListComponent,\r\n        WorkAtHomeUserListComponent\r\n        ],\r\n    imports: [ SharedModule,\r\n        AgGridModule.withComponents([WorkActivitiesListComponent]),\r\n        WorkActivityRoutingModule ],\r\n    exports: [RouterModule,\r\n        OvertimeUserListComponent,\r\n        SickDaysUserListComponent,\r\n        VacationsUserListComponent,\r\n        WorkAtHomeUserListComponent],\r\n    providers: [],\r\n})\r\nexport class WorkActivityModule {}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/work-activity.module.ts","module.exports = \"td, th {\\r\\n    border-top: 0px !important;\\r\\n    border-bottom: 0px !important;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/work-at-home/work-at-home-list/work-at-home-list.component.css\n// module id = ./ClientApp/app/components/work-activity/work-at-home/work-at-home-list/work-at-home-list.component.css\n// module chunks = common","module.exports = \"<user-work-at-home>\\r\\n    \\r\\n</user-work-at-home>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/work-at-home/work-at-home-list/work-at-home-list.component.html\n// module id = ./ClientApp/app/components/work-activity/work-at-home/work-at-home-list/work-at-home-list.component.html\n// module chunks = common","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './work-at-home-list.component.html',\r\n    styleUrls: ['./work-at-home-list.component.css']\r\n})\r\nexport class WorkAtHomeListComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/work-at-home/work-at-home-list/work-at-home-list.component.ts","module.exports = \"   .my-table-striped > tbody > tr:nth-of-type(odd) {\\r\\n    background-color: #f9f9f9 !important;\\r\\n  }\\r\\n\\r\\n  .link:hover {\\r\\n    cursor: pointer;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/work-at-home/work-at-home-user-list/work-at-home-user-list.component.css\n// module id = ./ClientApp/app/components/work-activity/work-at-home/work-at-home-user-list/work-at-home-user-list.component.css\n// module chunks = common","module.exports = \"<div class=\\\"card x_panel\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h2>Work at home</h2>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 text-right\\\" *ngIf=\\\"(userId != undefined && userId != null)\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"!isAtHome\\\">\\r\\n                    <div class=\\\"col-md-4 text-right toggle-div\\\" *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\">\\r\\n                        <a href=\\\"javascript:;\\\" class=\\\"user-profile dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n                            <button class=\\\"btn btn-primary toggle-button\\\">\\r\\n                                <span class=\\\"fa fa-plus\\\"></span>\\r\\n                            </button>\\r\\n                        </a>\\r\\n                        <ul class=\\\"dropdown-menu dropdown-usermenu pull-right\\\">\\r\\n                            <li>\\r\\n                                <a (click)=\\\"add()\\\" class=\\\"side-menu-link\\\">\\r\\n                                    Add Work at home\\r\\n                                </a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div id=\\\"datatable-responsive_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap no-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"table my-table-striped table-bordered projects\\\">\\r\\n                    <thead style=\\\"color: #73879C;\\\">\\r\\n                        <tr>\\r\\n                            <th *ngIf=\\\"userId == null\\\">User</th>\\r\\n                            <th>Date</th>\\r\\n                            <th>Comment</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <ngx-spinner [visible]=\\\"loading\\\" [config]=\\\"spinnerConfig\\\"></ngx-spinner>\\r\\n                        <tr *ngFor=\\\"let work of workAtHome; let i = index\\\">\\r\\n                            <td class=\\\"link\\\" (click)=\\\"goToUser(work)\\\" *ngIf=\\\"userId == null\\\">\\r\\n                                <span>\\r\\n                                    {{work.UserProfile.FirstName}} {{work.UserProfile.LastName}}\\r\\n                                </span>\\r\\n                            </td>\\r\\n                            <td><span>{{work.Date | date:'MM/dd/yyyy'}}</span></td>\\r\\n                            <td *ngIf=\\\"editId != work.Id\\\"><span>{{work.Comment}}</span></td>\\r\\n                            <td *ngIf=\\\"editId == work.Id\\\">\\r\\n                                <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"30\\\" rows=\\\"2\\\" [(ngModel)]=\\\"work.Comment\\\">\\r\\n                                    {{work.Comment}}\\r\\n                                </textarea>\\r\\n                            </td>\\r\\n                            <td *isCurrentUserOrHasRole=\\\"{ id: userId, roles: ['Super_Admin', 'Admin']}\\\" style=\\\"text-align:right\\\">\\r\\n                                <a *ngIf=\\\"editId == work.Id\\\" class=\\\"btn btn-primary black-tooltip\\\" (click)=\\\"edit(work)\\\">\\r\\n                                    <i class=\\\"fa fa-check\\\"></i>\\r\\n                                    <span class=\\\"tooltiptext\\\">Save</span>\\r\\n                                </a>\\r\\n                                <a *ngIf=\\\"editId != work.Id\\\" class=\\\"btn btn-primary black-tooltip\\\" (click)=\\\"edit(work)\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                    <span class=\\\"tooltiptext\\\">Edit</span>\\r\\n                                </a>\\r\\n                                <a class=\\\"btn btn-default black-tooltip\\\" (click)=\\\"confirmDeleteDialog(work.Id, i)\\\">\\r\\n                                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                    <span class=\\\"tooltiptext\\\">Del</span>\\r\\n                                </a>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <table-buttons [subject]=\\\"subject\\\">\\r\\n\\r\\n                </table-buttons>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/work-at-home/work-at-home-user-list/work-at-home-user-list.component.html\n// module id = ./ClientApp/app/components/work-activity/work-at-home/work-at-home-user-list/work-at-home-user-list.component.html\n// module chunks = common","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SPINNER_ANIMATIONS, SPINNER_PLACEMENT, ISpinnerConfig } from '@hardpool/ngx-spinner';\r\nimport { WorkAtHome } from '../../../../models/work-at-home.model';\r\nimport { User } from '../../../../models/user.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserStorageService } from '../../../../services/user-storage.service';\r\nimport { SickDayService } from '../../../../services/sick-day.service';\r\nimport { UsersService } from '../../../../services/users.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { WorkAtHomeQueryModel } from '../../../../models/query-models/work-at-home-query.model';\r\nimport { WorkAtHomeService } from '../../../../services/work-at-home.service';\r\nimport { UserQueryModel } from '../../../../models/query-models/user-query.model';\r\nimport { Location } from '@angular/common';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { DeleteConfirmationComponent } from '../../../modals/delete-confirmation/delete-confirmation.component';\r\n\r\n@Component({\r\n    selector: 'user-work-at-home',\r\n    templateUrl: './work-at-home-user-list.component.html',\r\n    styleUrls: ['./work-at-home-user-list.component.css']\r\n})\r\nexport class WorkAtHomeUserListComponent implements OnInit {\r\n  \r\n    workAtHome: Array<WorkAtHome> = new Array<WorkAtHome>();\r\n    newWorkAtHome: WorkAtHome = new WorkAtHome();\r\n    users: Array<User> = new Array<User>();\r\n    id: number;\r\n    status: string;\r\n    isAdmin: boolean;\r\n    isUser: boolean;\r\n    isMyPage: boolean;\r\n    isAddVisible: boolean;\r\n    selectedUser = new User();\r\n    isBeginDateIncorrect = false;\r\n    isEndDateIncorrect = false;\r\n    submitAttempt: boolean;\r\n    loading = false;\r\n    editText: string = 'Edit'\r\n    editId: number = -1;\r\n    isAtHome: boolean;\r\n    queryModel: WorkAtHomeQueryModel;\r\n    subject: Subject<any>;\r\n    subscription: Subscription;\r\n\r\n    @Input('userId') userId: number;\r\n\r\n    spinnerConfig: ISpinnerConfig = {\r\n            placement: SPINNER_PLACEMENT.block_ui,\r\n            animation: SPINNER_ANIMATIONS.spin_3,\r\n            size: \"3rem\",\r\n            color: \"#1574b3\"\r\n        };\r\n\r\n  \r\n  \r\n    constructor(        \r\n        private route: ActivatedRoute,\r\n        private userStorageService: UserStorageService,\r\n        private workAtHomeService: WorkAtHomeService,\r\n        private usersService: UsersService,\r\n        private fBuilder: FormBuilder,\r\n        private dialog: MatDialog,\r\n        private location: Location,\r\n        private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.subject = new Subject<any>();\r\n\r\n        let thisDay = new Date();\r\n        this.isAddVisible = false;\r\n        this.isAdmin = this.userStorageService.hasRole('Admin');\r\n        this.isUser = this.userStorageService.hasRole('User');\r\n        this.id = this.userId;\r\n        this.queryModel = new WorkAtHomeQueryModel();\r\n        if (this.id != null) this.queryModel.UserId = this.id;\r\n        this.loading = true;\r\n        this.isAtHome = false;\r\n            this.workAtHomeService.get(this.queryModel).subscribe(response => {\r\n                this.workAtHome = response.Result;\r\n                this.subject.next({from: \"component\", response: response});\r\n                this.workAtHome.forEach((value, index, array) => {\r\n                    value.Date = new Date(Date.parse(value.Date.toString()));\r\n                    if (value.Date.getFullYear() == thisDay.getFullYear() && value.Date.getMonth() == thisDay.getMonth()&&value.Date.getDay() == thisDay.getDay()){\r\n                        this.isAtHome = true;\r\n                    }\r\n                });\r\n                this.loading = false;\r\n            });\r\n            this.usersService.get(new UserQueryModel()).subscribe(response => {\r\n            this.users = response.Result;\r\n            }); \r\n\r\n            this.subscription = this.subject.asObservable().subscribe(response => {\r\n                if (response.from == \"tablebuttons\") {\r\n                    this.queryModel = response.response as WorkAtHomeQueryModel;\r\n                    if (this.id != null) this.queryModel.UserId = this.id;\r\n                    this.loading = true;\r\n                    this.loading = true;\r\n                    this.isAtHome = false;\r\n                        this.workAtHomeService.get(this.queryModel).subscribe(response => {\r\n                            this.workAtHome = response.Result;\r\n                            this.workAtHome.forEach((value, index, array) => {\r\n                                value.Date = new Date(Date.parse(value.Date.toString()));\r\n                                if (value.Date.getFullYear() == thisDay.getFullYear() && value.Date.getMonth() == thisDay.getMonth()&&value.Date.getDay() == thisDay.getDay()){\r\n                                    this.isAtHome = true;\r\n                                }\r\n                            });\r\n                            this.loading = false;\r\n                        });\r\n                        this.usersService.get(new UserQueryModel()).subscribe(response => {\r\n                        this.users = response.Result;\r\n                        });\r\n                }\r\n            });\r\n        this.isMyPage = (this.id == this.userStorageService.getId() || this.isAdmin);\r\n     }\r\n\r\n     delete(id, index){\r\n        this.isAtHome = false;\r\n        this.workAtHomeService.delete(id).subscribe(result => {\r\n            this.workAtHome.splice(index, 1);\r\n            let thisDay = new Date();\r\n            this.workAtHome.forEach((value, index, array) => {\r\n                value.Date = new Date(Date.parse(value.Date.toString()));\r\n                if (value.Date.getFullYear() == thisDay.getFullYear() && value.Date.getMonth() == thisDay.getMonth()&&value.Date.getDay() == thisDay.getDay()){\r\n                    this.isAtHome = true;\r\n                }\r\n            });\r\n        })\r\n     }\r\n\r\n     public confirmDeleteDialog(id, index) {\r\n\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.position = { top: '0' };\r\n        dialogConfig.autoFocus = false;\r\n\r\n        this.dialog.open(DeleteConfirmationComponent, dialogConfig)\r\n            .afterClosed().subscribe(dialogResult => {\r\n                if (dialogResult)\r\n                    this.delete(id, index);\r\n            });\r\n    }\r\n\r\n    public add() {\r\n        this.newWorkAtHome.Date = new Date();\r\n        this.newWorkAtHome.UserProfileId = this.id;\r\n        this.newWorkAtHome.Comment = '';\r\n        this.workAtHomeService.create(this.newWorkAtHome).subscribe((response) => {\r\n            this.newWorkAtHome = response;\r\n            this.subject.next({from: \"component\", response: response});\r\n            if (this.newWorkAtHome.Id != 0) {\r\n                this.isAtHome = true;\r\n                this.queryModel = new WorkAtHomeQueryModel();\r\n                this.queryModel.UserId = this.id;\r\n                this.workAtHomeService.get(this.queryModel).subscribe(response => {\r\n                    this.workAtHome = response.Result;\r\n                    this.workAtHome.forEach((value, index, array) => {\r\n                        value.Date = new Date(Date.parse(value.Date.toString()));\r\n                    });\r\n                });\r\n                this.isAddVisible = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public edit(work: WorkAtHome) {\r\n        if (this.editText == 'Edit') {\r\n            this.editText = 'Save'\r\n            this.editId = work.Id;\r\n        } \r\n        else {\r\n            this.editText = 'Edit';\r\n            this.workAtHomeService.update(work).subscribe(response => {\r\n                this.editId = -1;\r\n            });\r\n        }\r\n    }\r\n\r\n    public goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n    public goToUser(work: WorkAtHome){\r\n        this.router.navigateByUrl('/users/'+work.UserProfileId+'/info')\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/work-at-home/work-at-home-user-list/work-at-home-user-list.component.ts","module.exports = \"  .my-table-striped > tbody > tr:nth-of-type(odd) {\\r\\n    background-color: #f9f9f9 !important;\\r\\n  }\\r\\n\\r\\n  .link:hover {\\r\\n    cursor: pointer;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/workactivites/workactivities-list.component.css\n// module id = ./ClientApp/app/components/work-activity/workactivites/workactivities-list.component.css\n// module chunks = common","module.exports = \"<div class=\\\"card x_panel\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h2>Work Activities</h2>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div id=\\\"datatable-responsive_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap no-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"table my-table-striped table-bordered projects\\\">\\r\\n                    <thead style=\\\"color: #73879C;\\\">\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Count Days</th>\\r\\n                            <th>Date Begin</th>\\r\\n                            <th>Date End</th>\\r\\n                            <th>Comment</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <ngx-spinner [visible]=\\\"loading\\\" [config]=\\\"spinnerConfig\\\"></ngx-spinner>\\r\\n                        <tr *ngFor=\\\"let workActivityItem of workActivity; let i = index\\\">\\r\\n                            <td class=\\\"link\\\" (click)=\\\"goToUser(workActivityItem)\\\"><span>{{workActivityItem.Name}}</span></td>\\r\\n                            <td><span>{{workActivityItem.Type}}</span></td>\\r\\n                            <td><span>{{workActivityItem.CountDays}}</span></td>\\r\\n                            <td><span>{{workActivityItem.DateBegin| date:'MM/dd/yyyy'}}</span></td>\\r\\n                            <td><span>{{workActivityItem.DateEnd| date:'MM/dd/yyyy'}}</span></td>\\r\\n                            <td class=\\\"ellipsis\\\"><span>{{workActivityItem.Comment}}</span></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <table-buttons [subject]=\\\"subject\\\">\\r\\n\\r\\n                </table-buttons>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/work-activity/workactivites/workactivities-list.component.html\n// module id = ./ClientApp/app/components/work-activity/workactivites/workactivities-list.component.html\n// module chunks = common","import { Component, OnInit } from '@angular/core';\r\nimport { WorkActivity } from '../../../models/work-activity.model';\r\nimport { WorkActivityService } from '../../../services/work-activity.service';\r\nimport { WorkActivityQueryModel } from '../../../models/query-models/work-activity-query.model';\r\nimport { SPINNER_ANIMATIONS, SPINNER_PLACEMENT, ISpinnerConfig } from '@hardpool/ngx-spinner';\r\nimport { Location } from '@angular/common';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    templateUrl: './workactivities-list.component.html',\r\n    styleUrls: ['./workactivities-list.component.css']\r\n})\r\n\r\nexport class WorkActivitiesListComponent implements OnInit{\r\n    workActivity: Array<WorkActivity> = new Array<WorkActivity>();\r\n    status: string;\r\n    isMyPage: boolean;\r\n    loading: boolean;\r\n    queryModel: WorkActivityQueryModel;\r\n    subject: Subject<any>;\r\n    subscription: Subscription;\r\n\r\n    spinnerConfig: ISpinnerConfig = {\r\n        placement: SPINNER_PLACEMENT.block_ui,\r\n        animation: SPINNER_ANIMATIONS.spin_3,\r\n        size: \"3rem\",\r\n        color: \"#1574b3\"\r\n    };\r\n\r\n    constructor(\r\n        private workActivityService: WorkActivityService,\r\n        private location: Location,\r\n        private router: Router\r\n    ) {\r\n    };\r\n\r\n    dateFormatter(params) {\r\n        if(params.value)\r\n            return new Date(params.value).toLocaleString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subject = new Subject<any>();\r\n        this.queryModel = new WorkActivityQueryModel();\r\n        this.queryModel.Take =  10;\r\n        this.loading = true;\r\n        this.workActivityService.get(this.queryModel).subscribe(response => {\r\n            this.workActivity = response.Result;\r\n            this.subject.next({from: \"component\", response: response});\r\n            this.loading = false;\r\n        })\r\n\r\n        this.subscription = this.subject.asObservable().subscribe(response => {\r\n            if (response.from == \"tablebuttons\") {             \r\n                this.queryModel = response.response as WorkActivityQueryModel;\r\n                this.loading = true;\r\n                this.workActivityService.get(this.queryModel).subscribe(response => {\r\n                    this.workActivity = response.Result;\r\n                    this.loading = false;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n    public goToUser(workActivity: WorkActivity){\r\n        this.router.navigateByUrl('/users/'+workActivity.UserProfileId+'/info')\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/work-activity/workactivites/workactivities-list.component.ts","export class Overtime {\r\n\r\n    Id: number;\r\n\r\n    UserProfileId: number;\r\n\r\n    DateBegin: Date;\r\n\r\n    DateEnd: Date;\r\n\r\n    CountDays: number;\r\n\r\n    Comment: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/overtime.model.ts","import { BaseQueryModel } from \"./base-query.model\";\r\nimport { Overtime } from \"../overtime.model\";\r\n\r\nexport class OvertimeQueryModel extends BaseQueryModel<Overtime>{\r\n    public  CommentContain: string;\r\n\r\n    public UserId: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/query-models/overtime-query.model.ts","import { BaseQueryModel } from \"./base-query.model\";\r\nimport { SickDay } from \"../sick-day.model\" \r\n\r\nexport class SickDayQueryModel extends BaseQueryModel<SickDay>{\r\n    public  CommentContain: string;\r\n\r\n    public UserId: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/query-models/sick-day-query.model.ts","import { BaseQueryModel } from \"./base-query.model\";\r\nimport { SizeVacation } from \"../size-vacation.model\" \r\n\r\nexport class SizeVacationQueryModel extends BaseQueryModel<SizeVacation>{\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/query-models/size-vacation-query.model.ts","import { BaseQueryModel } from \"./base-query.model\";\r\nimport { UserProfileProject } from \"../user-profile-project.model\";\r\n\r\nexport class UserProfileProjectQueryModel extends BaseQueryModel<UserProfileProject>{\r\n    \r\n    public ProjectId: number;\r\n\r\n    public UserProfileId: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/query-models/user-profile-project-query.model.ts","import { BaseQueryModel } from \"./base-query.model\";\r\nimport { User } from \"../user.model\" \r\n\r\nexport class UserQueryModel extends BaseQueryModel<User>{\r\n    public  CommentContain:string;\r\n    public  FirstNameContain:string;\r\n    public  LastNameContain:string;\r\n    public  EmailContain:string;\r\n    public  PhoneContain:string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/query-models/user-query.model.ts","import { BaseQueryModel } from \"./base-query.model\";\r\nimport { Vacation } from \"../vacation.model\" \r\n\r\nexport class VacationQueryModel extends BaseQueryModel<Vacation>{\r\n    public  CommentContain: string;\r\n\r\n    public UserId: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/query-models/vacation.query.model.ts","import { BaseQueryModel } from \"./base-query.model\";\r\nimport { WorkActivity } from \"../work-activity.model\" \r\n\r\nexport class WorkActivityQueryModel extends BaseQueryModel<WorkActivity>{\r\n    public  CommentContain: string;\r\n\r\n    public  NameContain: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/query-models/work-activity-query.model.ts","import { BaseQueryModel } from \"./base-query.model\";\r\nimport { WorkAtHome } from \"../work-at-home.model\";\r\n\r\nexport class WorkAtHomeQueryModel extends BaseQueryModel<WorkAtHome>{\r\n    public  CommentContain: string;\r\n\r\n    public UserId: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/query-models/work-at-home-query.model.ts","export class SickDay {\r\n\r\n    Id: number;\r\n\r\n    CountDays: number;\r\n\r\n    DateBegin: Date;\r\n\r\n    DateEnd: Date;\r\n\r\n    Comment: string;\r\n\r\n    UserProfileId: number;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/sick-day.model.ts","\r\nexport class SizeVacation {\r\n    Id: number;\r\n\r\n    Year: number;\r\n\r\n    CountDays: number;  \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/size-vacation.model.ts","import { User } from \"./user.model\";\r\nimport { Project } from \"./project.model\";\r\n\r\nexport class UserProfileProject {\r\n\r\n    Id: number;\r\n\r\n    FirstName: string;\r\n\r\n    LastName: string;\r\n\r\n    UserProfileId: number;\r\n\r\n    Position: string;\r\n\r\n    ProjectId: number;\r\n\r\n    ProjectName: string;\r\n\r\n    DateStartWork: Date;\r\n\r\n    DateFinishWork: Date;\r\n\r\n    Status: string;\r\n\r\n    Comment: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/user-profile-project.model.ts","export class Vacation {\r\n\r\n    Id: number;\r\n\r\n    DateBegin: Date;\r\n\r\n    DateEnd: Date;\r\n\r\n    CountDays: number;\r\n\r\n    Comment: string;\r\n\r\n    UserProfileId: number;\r\n\r\n    CreatedDate: Date;\r\n\r\n    Status: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/vacation.model.ts","export class WorkAtHome {\r\n\r\n    Id: number;\r\n\r\n    Date: Date;\r\n\r\n    Comment: string;\r\n\r\n    UserProfileId: number;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/work-at-home.model.ts"],"sourceRoot":"webpack:///"}